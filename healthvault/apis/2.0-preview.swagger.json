{
    "swagger": "2.0",
    "info": {
        "version": "2.0-preview",
        "title": "Microsoft HealthVault REST API"
    },
    "host": "data.ppe.microsofthealth.net",
    "schemes": [
        "https"
    ],
    "paths": {
        "/ActionPlans/{actionPlanId}": {
            "get": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Get an instance of a specific action plan",
                "operationId": "ActionPlans_GetById",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanId",
                        "in": "path",
                        "description": "The action plan to update.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Delete an action plan instance",
                "operationId": "ActionPlans_Delete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanId",
                        "in": "path",
                        "description": "The instance of the plan to delete.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlans": {
            "get": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Get a collection of action plans",
                "operationId": "ActionPlans_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "maxPageSize",
                        "in": "query",
                        "description": "The maximum number of entries to return per page. Defaults to 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlansResponse[ActionPlanInstance]"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Update/Replace a complete action plan instance with no merge.",
                "operationId": "ActionPlans_Replace",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlan",
                        "in": "body",
                        "description": "The instance of the plan to update. The entire plan will be replaced with this version.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Post an action plan instance",
                "operationId": "ActionPlans_Create",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlan",
                        "in": "body",
                        "description": "The instance of the plan to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Update an action plan instance with merge",
                "operationId": "ActionPlans_Update",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlan",
                        "in": "body",
                        "description": "The instance of the plan to update. Only the fields present in the passed in model will be updated. All other fields and colelctions\r\n            will be left, as is, unless invalid.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlans/{actionPlanId}/Adherence": {
            "get": {
                "tags": [
                    "ActionPlans"
                ],
                "summary": "Gets adherence information for an action plan.",
                "operationId": "ActionPlans_GetAdherence",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "The start time.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "The end time.",
                        "required": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "actionPlanId",
                        "in": "path",
                        "description": "The action plan identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "objectiveId",
                        "in": "query",
                        "description": "The objective to filter the report to.",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "taskId",
                        "in": "query",
                        "description": "The task to filter the report to.",
                        "required": false,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanAdherenceSummary"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlans/{actionPlanId}/Objectives/{objectiveId}": {
            "delete": {
                "tags": [
                    "ActionPlanObjectives"
                ],
                "summary": "Remove an action plan objective",
                "operationId": "ActionPlanObjectives_Delete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanId",
                        "in": "path",
                        "description": "The instance of the plan that the objective belongs to.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    },
                    {
                        "name": "objectiveId",
                        "in": "path",
                        "description": "The instance of the objective to delete.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlanTasks/{actionPlanTaskId}": {
            "get": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Get a task by id",
                "operationId": "ActionPlanTasks_GetById",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTaskId",
                        "in": "path",
                        "description": "The unique identifer of the task.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Delete a task by id",
                "operationId": "ActionPlanTasks_Delete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTaskId",
                        "in": "path",
                        "description": "The unique identifer of the task.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlanTasks": {
            "get": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Get a collection of task definitions",
                "operationId": "ActionPlanTasks_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTaskStatus",
                        "in": "query",
                        "description": "An optional status used to filter the results.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "Unknown",
                            "Archived",
                            "InProgress",
                            "Recommended",
                            "Completed",
                            "Template"
                        ]
                    },
                    {
                        "name": "maxPageSize",
                        "in": "query",
                        "description": "The maximum number of entries to return per page. Defaults to 1000.",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTasksResponse[ActionPlanTaskInstance]"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Put an update for an action plan task",
                "operationId": "ActionPlanTasks_Replace",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTask",
                        "in": "body",
                        "description": "The updated action plan task.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Post a new action plan task",
                "operationId": "ActionPlanTasks_Create",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTask",
                        "in": "body",
                        "description": "The action plan task to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Patch an update for an action plan task",
                "operationId": "ActionPlanTasks_Update",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "actionPlanTask",
                        "in": "body",
                        "description": "The updated task",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/ActionPlanTasks/ValidateTracking": {
            "post": {
                "tags": [
                    "ActionPlanTasks"
                ],
                "summary": "Validate tracking for an action plan task",
                "operationId": "ActionPlanTasks_ValidateTracking",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "trackingValidation",
                        "in": "body",
                        "description": "The tracking validation information.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TrackingValidation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTaskTrackingResponse[ActionPlanTaskTracking]"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Goals/{goalId}": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Get an instance of a specific goal",
                "operationId": "Goals_GetById",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "The goal identifier.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Goal"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Goals"
                ],
                "summary": "Delete a goal instance",
                "operationId": "Goals_Delete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalId",
                        "in": "path",
                        "description": "The identifier of the goal to delete.",
                        "required": true,
                        "type": "string",
                        "format": "uuid"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Goals/active": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Get a collection of the active goals",
                "operationId": "Goals_GetActive",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "types",
                        "in": "query",
                        "description": "The goal types(e.g Steps, CaloriesBurned) filter.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "windowTypes",
                        "in": "query",
                        "description": "The goal window types(e.g Daily, Weekly) filter.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GoalsResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Goals": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Get a collection of all goals",
                "operationId": "Goals_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "types",
                        "in": "query",
                        "description": "The goal types(e.g Steps, CaloriesBurned) filter.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "windowTypes",
                        "in": "query",
                        "description": "The goal window types(e.g Daily, Weekly) filter.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start date for date range filter.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The end date for date range filter.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GoalsResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Goals"
                ],
                "summary": "Update/Replace a complete goal instance with no merge",
                "operationId": "Goals_Replace",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goal",
                        "in": "body",
                        "description": "The instance of the goal to update. The entire goal will be replaced with this version.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Goal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Goal"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Goals"
                ],
                "summary": "Post a collection of goal instances",
                "operationId": "Goals_Create",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalsWrapper",
                        "in": "body",
                        "description": "The collection of goal instances to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalsWrapper"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GoalsResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Goals"
                ],
                "summary": "Update collection of goal instances with merge",
                "operationId": "Goals_Update",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalsWrapper",
                        "in": "body",
                        "description": "The collection of goal instances to update. Only the fields present in the passed in model will be updated. All other fields and colelctions\r\n            will be left, as is, unless invalid.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalsWrapper"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GoalsResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/GoalRecommendations/{goalRecommendationId}": {
            "get": {
                "tags": [
                    "GoalRecommendations"
                ],
                "summary": "Get an instance of a specific goal recommendation",
                "operationId": "GoalRecommendations_GetById",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalRecommendationId",
                        "in": "path",
                        "description": "The goal recommendation identifier.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GoalRecommendationInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "GoalRecommendations"
                ],
                "summary": "Delete a goal recommendation instance",
                "operationId": "GoalRecommendations_Delete",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalRecommendationId",
                        "in": "path",
                        "description": "The identifier of the goal recommendation to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/GoalRecommendations": {
            "get": {
                "tags": [
                    "GoalRecommendations"
                ],
                "summary": "Get a collection of all goal recommendations",
                "operationId": "GoalRecommendations_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalTypes",
                        "in": "query",
                        "description": "The goal types(e.g Steps, CaloriesBurned) filter.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "goalWindowTypes",
                        "in": "query",
                        "description": "The goal window types(e.g Daily, Weekly) filter.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/GoalRecommendationsResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "GoalRecommendations"
                ],
                "summary": "Post a goal recommendation instance",
                "operationId": "GoalRecommendations_Create",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalRecommendation",
                        "in": "body",
                        "description": "The instance of the goal recommendation to create.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GoalRecommendation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/GoalRecommendationInstance"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/GoalRecommendations/{goalRecommendationId}/Acknowledge": {
            "put": {
                "tags": [
                    "GoalRecommendations"
                ],
                "summary": "Updates the goal recommendation to acknowledged state",
                "operationId": "GoalRecommendations_Acknowledge",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "goalRecommendationId",
                        "in": "path",
                        "description": "The identifier of the goal recommendation to acknowledge.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Onboarding/GenerateInviteCode": {
            "post": {
                "tags": [
                    "Onboarding"
                ],
                "summary": "Onboard a user",
                "operationId": "Onboarding_GenerateInviteCode",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "onboardingRequest",
                        "in": "body",
                        "description": "The meta data associated with an onboarding request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnboardingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnboardingResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Sleeps": {
            "get": {
                "tags": [
                    "Sleeps"
                ],
                "summary": "Get the Sleep Activity data for this user by date range",
                "operationId": "Sleeps_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "The ISO 8601 formatted start time of the Sleep activities, inclusive.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "The ISO 8601 formatted end time of the Sleep activities, exclusive.  Defaults to the current time in UTC.",
                        "required": false,
                        "type": "string",
                        "format": "date-time"
                    },
                    {
                        "name": "includeDetails",
                        "in": "query",
                        "description": "comma separated string to additional details. Available values Basic, Full. Default - Basic",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "maxPageSize",
                        "in": "query",
                        "description": "The maximum number of entries to return per page.  Defaults to 31",
                        "required": false,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SleepResponse"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/TaskTracking": {
            "post": {
                "tags": [
                    "TaskTracking"
                ],
                "summary": "Post a task tracking",
                "operationId": "TaskTracking_Post",
                "consumes": [
                    "application/json",
                    "text/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "taskTrackingOccurrence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TaskTrackingOccurrence"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "x-id": "HttpResponseMessage"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/Timeline": {
            "get": {
                "tags": [
                    "Timeline"
                ],
                "summary": "Get the task timeline for a given timerange",
                "operationId": "Timeline_Get",
                "consumes": [],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "startDate",
                        "in": "query",
                        "description": "The start time.",
                        "required": true,
                        "type": "object",
                        "x-id": "LocalDate"
                    },
                    {
                        "name": "endDate",
                        "in": "query",
                        "description": "The end time.",
                        "required": false,
                        "type": "object",
                        "x-id": "Nullable`1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ActionPlanTasksResponse[TimelineTask]"
                        }
                    },
                    "default": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CancellationToken": {
            "type": "object",
            "properties": {
                "isCancellationRequested": {
                    "type": "boolean",
                    "readOnly": true
                },
                "canBeCanceled": {
                    "type": "boolean",
                    "readOnly": true
                },
                "waitHandle": {
                    "$ref": "#/definitions/WaitHandle",
                    "readOnly": true
                }
            },
            "x-id": "CancellationToken"
        },
        "WaitHandle": {
            "type": "object",
            "properties": {
                "handle": {
                    "type": "object",
                    "x-id": "IntPtr"
                },
                "safeWaitHandle": {
                    "$ref": "#/definitions/SafeWaitHandle"
                }
            },
            "x-id": "WaitHandle"
        },
        "SafeWaitHandle": {
            "type": "object",
            "properties": {
                "isInvalid": {
                    "type": "boolean",
                    "readOnly": true
                },
                "isClosed": {
                    "type": "boolean",
                    "readOnly": true
                }
            },
            "x-id": "SafeWaitHandle"
        },
        "ActionPlanInstance": {
            "description": "An instance of an action plan associated to a user",
            "required": [
                "imageUrl",
                "thumbnailImageUrl",
                "category",
                "objectives"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The ID of the plan instance",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the plan",
                    "enum": [
                        "Unknown",
                        "Archived",
                        "Recommended",
                        "InProgress",
                        "Completed",
                        "Template"
                    ],
                    "type": "string"
                },
                "organizationId": {
                    "description": "The ID of the organization that manages this plan. Read-only",
                    "type": "string"
                },
                "organizationName": {
                    "description": "The name of the organization that manages this plan. Read-only",
                    "type": "string"
                },
                "associatedTasks": {
                    "description": "The Task instances associated with this plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTaskInstance"
                    }
                },
                "name": {
                    "description": "The name of the plan, localized",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the plan, localized",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "An HTTPS URL to an image for the plan. Suggested resolution is 212x212 with a 25px margin in the image.",
                    "type": "string"
                },
                "thumbnailImageUrl": {
                    "description": "An HTTPS URL to a thumbnail image for the plan. Suggested resolution is 212x212 with a 25px margin in the image.",
                    "type": "string"
                },
                "category": {
                    "description": "The category of the plan",
                    "enum": [
                        "Unknown",
                        "Health",
                        "Sleep",
                        "Activity",
                        "Stress"
                    ],
                    "type": "string"
                },
                "objectives": {
                    "description": "The Collection of objectives for the plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Objective"
                    }
                }
            },
            "x-id": "ActionPlanInstance"
        },
        "ActionPlanTaskInstance": {
            "description": "An instance of an action a user should complete.\r\nAdherence to a plan is measured by completion statistics against tasks",
            "required": [
                "name",
                "shortDescription",
                "longDescription",
                "imageUrl",
                "thumbnailImageUrl",
                "taskType",
                "trackingPolicy",
                "associatedPlanId",
                "associatedObjectiveIds",
                "completionType"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The Id of the task instance",
                    "type": "string"
                },
                "status": {
                    "description": "The status of the task",
                    "enum": [
                        "Unknown",
                        "Archived",
                        "InProgress",
                        "Recommended",
                        "Completed",
                        "Template"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "The date that the task was started. Read-only",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "The date that the task was ended. Read-only",
                    "type": "string"
                },
                "organizationId": {
                    "description": "The ID of the organization that owns this task. Read-only",
                    "type": "string"
                },
                "organizationName": {
                    "description": "The name of the organization that owns this task. Read-only",
                    "type": "string"
                },
                "name": {
                    "description": "The friendly name of the task",
                    "type": "string"
                },
                "shortDescription": {
                    "description": "The short description of the task",
                    "type": "string"
                },
                "longDescription": {
                    "description": "The detailed description of the task",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "The image URL of the task. Suggested resolution is 200 x 200",
                    "type": "string"
                },
                "thumbnailImageUrl": {
                    "description": "The thumbnail image URL of the task. Suggested resolution is 90 x 90",
                    "type": "string"
                },
                "taskType": {
                    "description": "The type of the task, used to choose the UI editor for the task",
                    "enum": [
                        "Unknown",
                        "BloodPressure",
                        "Other"
                    ],
                    "type": "string"
                },
                "trackingPolicy": {
                    "$ref": "#/definitions/ActionPlanTrackingPolicy",
                    "description": "The tracking policy"
                },
                "signupName": {
                    "description": "The text shown during task signup.",
                    "type": "string"
                },
                "associatedPlanId": {
                    "format": "uuid",
                    "description": "The ID of the associated plan. This is not needed when adding a task as part of a new plan",
                    "type": "string"
                },
                "associatedObjectiveIds": {
                    "description": "The list of objective IDs the task is associated with",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "completionType": {
                    "description": "The Completion Type of the Task",
                    "enum": [
                        "Unknown",
                        "Frequency",
                        "Scheduled"
                    ],
                    "type": "string"
                },
                "frequencyTaskCompletionMetrics": {
                    "$ref": "#/definitions/ActionPlanFrequencyTaskCompletionMetrics",
                    "description": "Completion metrics for frequency based tasks"
                },
                "schedules": {
                    "description": "Schedules for when a task should be completed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Schedule"
                    }
                }
            },
            "x-id": "ActionPlanTaskInstance"
        },
        "Objective": {
            "description": "An objective is a high-level concept of what a user wants to accomplish as part of their enrollment in various action plans\r\nA user may have more than one objective\r\nA plan may contribute to more than one objective\r\nEach objective can have one measurable outcome",
            "required": [
                "id",
                "name",
                "description",
                "state",
                "outcomeType"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The unique identifier of the instance of the objective",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the objective",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the objective",
                    "type": "string"
                },
                "state": {
                    "description": "The state of the objective",
                    "enum": [
                        "Unknown",
                        "Inactive",
                        "Active"
                    ],
                    "type": "string"
                },
                "outcomeName": {
                    "description": "Gets or sets the name of the outcome",
                    "type": "string"
                },
                "outcomeType": {
                    "description": "Gets or sets the type of the outcome",
                    "enum": [
                        "Unknown",
                        "StepsPerDay",
                        "CaloriesPerDay",
                        "ExerciseHoursPerWeek",
                        "SleepHoursPerNight",
                        "MinutesToFallAsleepPerNight",
                        "Other"
                    ],
                    "type": "string"
                }
            },
            "x-id": "Objective"
        },
        "ActionPlanTrackingPolicy": {
            "description": "The tracking policy to apply to the Action Plan Task",
            "type": "object",
            "properties": {
                "isAutoTrackable": {
                    "description": "Gets or sets an indicator as to whether or not the Tracking Policy is AutoTrackable",
                    "type": "boolean"
                },
                "occurrenceMetrics": {
                    "$ref": "#/definitions/ActionPlanTaskOccurrenceMetrics",
                    "description": "Gets or sets the Occurrence Metrics for the tracking policy"
                },
                "targetEvents": {
                    "description": "The target events to track against",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTaskTargetEvent"
                    }
                }
            },
            "x-id": "ActionPlanTrackingPolicy"
        },
        "ActionPlanFrequencyTaskCompletionMetrics": {
            "description": "The Completion Metrics for frequency based tasks",
            "type": "object",
            "properties": {
                "windowType": {
                    "description": "The window in which the occurrences must be completed",
                    "enum": [
                        "Unknown",
                        "None",
                        "Daily",
                        "Weekly"
                    ],
                    "type": "string"
                },
                "occurrenceCount": {
                    "format": "int32",
                    "description": "The number of times the Task has to be completed",
                    "type": "integer"
                }
            },
            "x-id": "ActionPlanFrequencyTaskCompletionMetrics"
        },
        "Schedule": {
            "description": "A schedule for an action plan task",
            "required": [
                "reminderState"
            ],
            "type": "object",
            "properties": {
                "reminderState": {
                    "description": "The reminder state of the task",
                    "enum": [
                        "Unknown",
                        "Off",
                        "OnTime",
                        "Before5Minutes",
                        "Before10Minutes",
                        "Before15Minutes",
                        "Before30Minutes",
                        "Before1Hour",
                        "Before2Hours",
                        "Before4Hours",
                        "Before8Hours"
                    ],
                    "type": "string"
                },
                "scheduledDays": {
                    "description": "The days that this will show for the user\r\nExpected values: { 'Unknown', 'Everyday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday' }",
                    "type": "array",
                    "items": {
                        "enum": [
                            "Unknown",
                            "Everyday",
                            "Sunday",
                            "Monday",
                            "Tuesday",
                            "Wednesday",
                            "Thursday",
                            "Friday",
                            "Saturday"
                        ],
                        "type": "string"
                    }
                },
                "scheduledTime": {
                    "$ref": "#/definitions/Time",
                    "description": "The time at which this task is scheduled"
                }
            },
            "x-id": "Schedule"
        },
        "ActionPlanTaskOccurrenceMetrics": {
            "description": "The task occurrence metrics",
            "type": "object",
            "properties": {
                "evaluateTargets": {
                    "description": "Gets or sets a value indicating whether or not to evaluate the targets",
                    "type": "boolean"
                },
                "targets": {
                    "description": "Gets or sets the targets to evaluate",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanRangeMetric"
                    }
                }
            },
            "x-id": "ActionPlanTaskOccurrenceMetrics"
        },
        "ActionPlanTaskTargetEvent": {
            "description": "The tracking properties of a HealthVault event",
            "type": "object",
            "properties": {
                "elementXPath": {
                    "description": "XML XPath to the property for which task should be tracked",
                    "type": "string"
                },
                "elementValues": {
                    "description": "List of all of the possible values for a given xPath property. (i.e. \"run\", \"running\", \"walk\" etc).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "isNegated": {
                    "description": "Flag to indicate if the condition mentioned above is negated. e.g. Item shouldn't be a run or a walk.",
                    "type": "boolean"
                }
            },
            "x-id": "ActionPlanTaskTargetEvent"
        },
        "Time": {
            "description": "Represents a time without a date",
            "type": "object",
            "properties": {
                "hours": {
                    "format": "int32",
                    "description": "Hours from 0 - 23",
                    "type": "integer"
                },
                "minutes": {
                    "format": "int32",
                    "description": "Minutes from 0 - 59",
                    "type": "integer"
                }
            },
            "x-id": "Time"
        },
        "ActionPlanRangeMetric": {
            "description": "Defines the Action Plan Range Numeric",
            "type": "object",
            "properties": {
                "propertyName": {
                    "description": "Gets or sets the property name the metric applies to",
                    "type": "string"
                },
                "valueType": {
                    "description": "Gets or sets the Value Type of the Metric",
                    "enum": [
                        "Unknown",
                        "MinutesToMidnight"
                    ],
                    "type": "string"
                },
                "maxTarget": {
                    "format": "double",
                    "description": "Gets or sets the Max value of the target",
                    "type": "number"
                },
                "minTarget": {
                    "format": "double",
                    "description": "Gets or sets the min value of the target",
                    "type": "number"
                },
                "propertyXPath": {
                    "description": "Gets or sets the XPath of the property that the metric applies to",
                    "type": "string"
                }
            },
            "x-id": "ActionPlanRangeMetric"
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/ErrorInformation"
                }
            },
            "x-id": "ErrorResponse"
        },
        "ErrorInformation": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                },
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorInformation"
                    }
                },
                "innererror": {
                    "$ref": "#/definitions/ErrorInformation"
                },
                "exception": {
                    "type": "object",
                    "x-id": "Exception"
                }
            },
            "x-id": "ErrorInformation"
        },
        "ActionPlansResponse[ActionPlanInstance]": {
            "description": "The action plans collection response.",
            "type": "object",
            "properties": {
                "plans": {
                    "description": "The collection of action plans",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanInstance"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "ActionPlansResponse`1"
        },
        "ActionPlan": {
            "description": "An action plan being created for a user",
            "required": [
                "imageUrl",
                "thumbnailImageUrl",
                "category",
                "objectives"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the plan, localized",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the plan, localized",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "An HTTPS URL to an image for the plan. Suggested resolution is 212x212 with a 25px margin in the image.",
                    "type": "string"
                },
                "thumbnailImageUrl": {
                    "description": "An HTTPS URL to a thumbnail image for the plan. Suggested resolution is 212x212 with a 25px margin in the image.",
                    "type": "string"
                },
                "category": {
                    "description": "The category of the plan",
                    "enum": [
                        "Unknown",
                        "Health",
                        "Sleep",
                        "Activity",
                        "Stress"
                    ],
                    "type": "string"
                },
                "objectives": {
                    "description": "The Collection of objectives for the plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Objective"
                    }
                },
                "associatedTasks": {
                    "description": "The Tasks associated with this plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTask"
                    }
                }
            },
            "x-id": "ActionPlan"
        },
        "ActionPlanTask": {
            "description": "An action a user should complete.\r\nAdherence to a plan is measured by completion statistics against tasks",
            "required": [
                "name",
                "shortDescription",
                "longDescription",
                "imageUrl",
                "thumbnailImageUrl",
                "taskType",
                "trackingPolicy",
                "associatedPlanId",
                "associatedObjectiveIds",
                "completionType"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "description": "The friendly name of the task",
                    "type": "string"
                },
                "shortDescription": {
                    "description": "The short description of the task",
                    "type": "string"
                },
                "longDescription": {
                    "description": "The detailed description of the task",
                    "type": "string"
                },
                "imageUrl": {
                    "description": "The image URL of the task. Suggested resolution is 200 x 200",
                    "type": "string"
                },
                "thumbnailImageUrl": {
                    "description": "The thumbnail image URL of the task. Suggested resolution is 90 x 90",
                    "type": "string"
                },
                "taskType": {
                    "description": "The type of the task, used to choose the UI editor for the task",
                    "enum": [
                        "Unknown",
                        "BloodPressure",
                        "Other"
                    ],
                    "type": "string"
                },
                "trackingPolicy": {
                    "$ref": "#/definitions/ActionPlanTrackingPolicy",
                    "description": "The tracking policy"
                },
                "signupName": {
                    "description": "The text shown during task signup.",
                    "type": "string"
                },
                "associatedPlanId": {
                    "format": "uuid",
                    "description": "The ID of the associated plan. This is not needed when adding a task as part of a new plan",
                    "type": "string"
                },
                "associatedObjectiveIds": {
                    "description": "The list of objective IDs the task is associated with",
                    "type": "array",
                    "items": {
                        "format": "uuid",
                        "type": "string"
                    }
                },
                "completionType": {
                    "description": "The Completion Type of the Task",
                    "enum": [
                        "Unknown",
                        "Frequency",
                        "Scheduled"
                    ],
                    "type": "string"
                },
                "frequencyTaskCompletionMetrics": {
                    "$ref": "#/definitions/ActionPlanFrequencyTaskCompletionMetrics",
                    "description": "Completion metrics for frequency based tasks"
                },
                "schedules": {
                    "description": "Schedules for when a task should be completed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Schedule"
                    }
                }
            },
            "x-id": "ActionPlanTask"
        },
        "ActionPlanAdherenceSummary": {
            "description": "An action plan for adherence reporting purposes",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The ID of the plan",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the plan",
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "The starting date of the adherence summary.",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "The ending date of the adherence summary.",
                    "type": "string"
                },
                "objectives": {
                    "description": "The Collection of objectives for the plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObjectiveAdherenceSummary"
                    }
                }
            },
            "x-id": "ActionPlanAdherenceSummary"
        },
        "ObjectiveAdherenceSummary": {
            "description": "An action plan objective for the purpose of the adherence report",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The unique identifier of the instance of the objective",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the objective",
                    "type": "string"
                },
                "outcomeName": {
                    "description": "The name of the associated outcome",
                    "type": "string"
                },
                "associatedTasks": {
                    "description": "The Tasks associated with this plan",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTaskAdherenceSummary"
                    }
                }
            },
            "x-id": "ObjectiveAdherenceSummary"
        },
        "ActionPlanTaskAdherenceSummary": {
            "description": "An adherence summary for a task in an action plan",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The Id of the task",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the task",
                    "type": "string"
                },
                "windowType": {
                    "description": "The recurrence type of the schedule window",
                    "enum": [
                        "Unknown",
                        "None",
                        "Daily",
                        "Weekly"
                    ],
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "The starting date of the task or the start date requested, whichever is later.",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "The ending date of the task or the end date requested, whichever is earlier.",
                    "type": "string"
                },
                "weeklyAdherence": {
                    "description": "A list of weekly adherence summaries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeeklyAdherenceSummary"
                    }
                }
            },
            "x-id": "ActionPlanTaskAdherenceSummary"
        },
        "WeeklyAdherenceSummary": {
            "description": "A summary of a tasks weekly adherence",
            "type": "object",
            "properties": {
                "weekStart": {
                    "format": "date-time",
                    "description": "The start of the week",
                    "type": "string"
                },
                "completions": {
                    "format": "int32",
                    "description": "The # of completions that occurred this week",
                    "type": "integer"
                },
                "intendedCompletions": {
                    "format": "int32",
                    "description": "The # of completions that were intended for this week",
                    "type": "integer"
                },
                "intendedOccurrences": {
                    "format": "int32",
                    "description": "The # of occurrences that were intended for this week",
                    "type": "integer"
                },
                "manualTrackedOccurrences": {
                    "format": "int32",
                    "description": "The # of occurrences that were manually tracked this week",
                    "type": "integer"
                },
                "automaticTrackedOccurrences": {
                    "format": "int32",
                    "description": "The # of occurrences that were automatically tracked this week",
                    "type": "integer"
                },
                "automaticTrackedOccurrenceEvidence": {
                    "description": "A list of evidence (HealthVault Thing IDs) that were automatically tracked",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-id": "WeeklyAdherenceSummary"
        },
        "ActionPlanTasksResponse[ActionPlanTaskInstance]": {
            "description": "The action plans task collection response",
            "type": "object",
            "properties": {
                "tasks": {
                    "description": "The collection of tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTaskInstance"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "ActionPlanTasksResponse`1"
        },
        "TrackingValidation": {
            "description": "class for Tracking Validation",
            "type": "object",
            "properties": {
                "actionPlanTask": {
                    "$ref": "#/definitions/ActionPlanTask",
                    "description": "Gets or sets the action plan task."
                },
                "xmlThingDocument": {
                    "description": "Gets or sets the XML thing document.",
                    "type": "string"
                }
            },
            "x-id": "TrackingValidation"
        },
        "ActionPlanTaskTrackingResponse[ActionPlanTaskTracking]": {
            "description": "The action plans task tracking collection response",
            "type": "object",
            "properties": {
                "taskTrackingInstances": {
                    "description": "The collection of tasks tracking occurrences",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ActionPlanTaskTracking"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "ActionPlanTaskTrackingResponse`1"
        },
        "ActionPlanTaskTracking": {
            "description": "A tracking object for an Action Plan Task",
            "type": "object",
            "properties": {
                "id": {
                    "description": "Gets or sets the Id of the task tracking",
                    "type": "string"
                },
                "trackingType": {
                    "description": "Gets or sets the task tracking type",
                    "enum": [
                        "Unknown",
                        "Manual",
                        "Auto"
                    ],
                    "type": "string"
                },
                "timeZoneOffset": {
                    "format": "int32",
                    "description": "Gets or sets the timezone offset of the task tracking, \r\nif a task is local time based, it should be set as null",
                    "type": "integer"
                },
                "trackingDateTime": {
                    "format": "date-time",
                    "description": "Gets or sets the task tracking time",
                    "type": "string"
                },
                "creationDateTime": {
                    "format": "date-time",
                    "description": "Gets or sets the creation time of the task tracking",
                    "type": "string"
                },
                "trackingStatus": {
                    "description": "Gets or sets the task tracking status",
                    "enum": [
                        "Unknown",
                        "Occurrence",
                        "Completion",
                        "OutOfWindow"
                    ],
                    "type": "string"
                },
                "occurrenceStart": {
                    "format": "date-time",
                    "description": "Gets or sets the start time of the occurrence window,\r\nit is null for Completion and OutOfWindow tracking",
                    "type": "string"
                },
                "occurrenceEnd": {
                    "format": "date-time",
                    "description": "Gets or sets the end time of the occurrence window,\r\nit is null for Completion and OutOfWindow tracking",
                    "type": "string"
                },
                "completionStart": {
                    "format": "date-time",
                    "description": "Gets or sets the start time of the completion window",
                    "type": "string"
                },
                "completionEnd": {
                    "format": "date-time",
                    "description": "Gets or sets the end time of the completion window",
                    "type": "string"
                },
                "taskId": {
                    "format": "uuid",
                    "description": "Gets or sets task Id",
                    "type": "string"
                },
                "feedback": {
                    "description": "Gets or sets the tracking feedback",
                    "type": "string"
                },
                "evidence": {
                    "$ref": "#/definitions/ActionPlanTaskTrackingEvidence",
                    "description": "Gets or sets the evidence of the task tracking"
                }
            },
            "x-id": "ActionPlanTaskTracking"
        },
        "ActionPlanTaskTrackingEvidence": {
            "description": "The evidence associated Action Plan Task Tracking",
            "type": "object",
            "properties": {
                "trackings": {
                    "description": "The Tracking IDs as evidence",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "hvThings": {
                    "description": "The HealthVault ThingIDs as evidence",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-id": "ActionPlanTaskTrackingEvidence"
        },
        "Goal": {
            "description": "A goal defines a target for a measurement or action to be performed by a user.\r\nFor example, walk 5000 steps per day, burn 1500 calories per day",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The unique identifier of a goal instance.",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the goal.\r\nFor example, Daily walk goal",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the goal.",
                    "type": "string"
                },
                "startDate": {
                    "format": "date-time",
                    "description": "The start date of the goal in Universal Time Zone(UTC).",
                    "type": "string"
                },
                "endDate": {
                    "format": "date-time",
                    "description": "The end date of the goal in Universal Time Zone(UTC). \r\nIf the end date is in the future, this is the target date.",
                    "type": "string"
                },
                "goalType": {
                    "description": "Specifies the type of data related to this goal.",
                    "enum": [
                        "Unknown",
                        "Steps",
                        "CaloriesBurned",
                        "Weight",
                        "BloodPressureSystolic",
                        "BloodPressureDiastolic"
                    ],
                    "type": "string"
                },
                "recurrenceMetrics": {
                    "$ref": "#/definitions/GoalRecurrenceMetrics",
                    "description": "The goal recurrence metrics.\r\nFor example, A goal can be defined on a weekly interval, meaning the target is intended to be achieved every week. Walking 50000 steps in a week."
                },
                "range": {
                    "$ref": "#/definitions/GoalRange",
                    "description": "The primary range of achievement for the goal. \r\nFor example, the ideal weight or daily steps target."
                },
                "additionalRanges": {
                    "description": "Other ranges of achievement for the goal.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalRange"
                    }
                }
            },
            "x-id": "Goal"
        },
        "GoalRecurrenceMetrics": {
            "description": "The recurrence metrics for a goal.",
            "type": "object",
            "properties": {
                "windowType": {
                    "description": "Specifies the recurrence window of the goal",
                    "enum": [
                        "Unknown",
                        "Daily",
                        "Weekly",
                        "Monthly"
                    ],
                    "type": "string"
                },
                "occurrenceCount": {
                    "format": "int32",
                    "description": "Specifies the number of times the goal's target is intended to be achieved in given window\r\nFor example, the goal \"walk 5000 steps, 4 times per week\" would be represented as: a window of a \"week\", an occurrence count of 4, and a goal target of 5000.",
                    "type": "integer"
                }
            },
            "x-id": "GoalRecurrenceMetrics"
        },
        "GoalRange": {
            "description": "The range of achievement for a goal.",
            "type": "object",
            "properties": {
                "name": {
                    "description": "The name of the range.",
                    "type": "string"
                },
                "description": {
                    "description": "The description of the range. Allows more detailed information about the range.",
                    "type": "string"
                },
                "minimum": {
                    "format": "double",
                    "description": "The minimum value for the range.\r\nFor ranges greater than a specified value with no maximum, specify a minimum but no maximum.",
                    "type": "number"
                },
                "maximum": {
                    "format": "double",
                    "description": "The maximum value for the range.\r\nFor ranges less than a specified value with no minimum, specify a maximum but no minimum.",
                    "type": "number"
                },
                "units": {
                    "description": "The units of the range.",
                    "enum": [
                        "Unknown",
                        "Kilograms",
                        "Count",
                        "Calories",
                        "MillimetersOfMercury"
                    ],
                    "type": "string"
                }
            },
            "x-id": "GoalRange"
        },
        "GoalsResponse": {
            "description": "The goal response.",
            "type": "object",
            "properties": {
                "goals": {
                    "description": "The collection of goals",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goal"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "GoalsResponse"
        },
        "GoalsWrapper": {
            "description": "The goals wrapper.",
            "type": "object",
            "properties": {
                "goals": {
                    "description": "The collection of goals",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Goal"
                    }
                }
            },
            "x-id": "GoalsWrapper"
        },
        "GoalRecommendationInstance": {
            "description": "An instance of a goal recommendation associated to a user",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier of the recommendation.",
                    "type": "string"
                },
                "organizationId": {
                    "description": "The ID of the organization that manages this recommendation",
                    "type": "string"
                },
                "organizationName": {
                    "description": "The name of the organization that manages this recommendation",
                    "type": "string"
                },
                "acknowledged": {
                    "description": "Specifies if the user has used the recommendation to set a goal.",
                    "type": "boolean"
                },
                "expirationDate": {
                    "format": "date-time",
                    "description": "The expiration date of the recommendation in Universal Time Zone(UTC).",
                    "type": "string"
                },
                "associatedGoal": {
                    "$ref": "#/definitions/Goal",
                    "description": "The associated goal data"
                }
            },
            "x-id": "GoalRecommendationInstance"
        },
        "GoalRecommendationsResponse": {
            "description": "The goal recommendations response.",
            "type": "object",
            "properties": {
                "goalRecommendations": {
                    "description": "The collection of goal recommendations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GoalRecommendationInstance"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "GoalRecommendationsResponse"
        },
        "GoalRecommendation": {
            "description": "A goal recommendation being created for a user",
            "type": "object",
            "properties": {
                "expirationDate": {
                    "format": "date-time",
                    "description": "The expiration date of the recommendation in Universal Time Zone(UTC).",
                    "type": "string"
                },
                "associatedGoal": {
                    "$ref": "#/definitions/Goal",
                    "description": "The associated goal data"
                }
            },
            "x-id": "GoalRecommendation"
        },
        "OnboardingRequest": {
            "description": "The content passed from a client during the onboarding process",
            "type": "object",
            "properties": {
                "friendlyName": {
                    "description": "Gets sets the friendly name",
                    "type": "string"
                },
                "applicationPatientId": {
                    "description": "Gets sets ApplicationPatientId",
                    "type": "string"
                },
                "secretQuestion": {
                    "description": "Gets or sets the user's secret question",
                    "type": "string"
                },
                "secretAnswer": {
                    "description": "Gets or sets the user's secret answer",
                    "type": "string"
                },
                "firstName": {
                    "description": "Gets or sets the user's first name.",
                    "type": "string"
                },
                "lastName": {
                    "description": "Gets or sets the user's last name.",
                    "type": "string"
                },
                "email": {
                    "description": "Gets or sets the user's email address",
                    "type": "string"
                },
                "zipCode": {
                    "description": "Gets and sets the user zip code/postal code",
                    "type": "string"
                },
                "state": {
                    "description": "Gets and sets the user's state",
                    "type": "string"
                },
                "country": {
                    "description": "Gets and sets the user's country/region",
                    "type": "string"
                },
                "birthday": {
                    "format": "date-time",
                    "description": "Gets and sets the user's birthday",
                    "type": "string"
                },
                "gender": {
                    "description": "Gets and sets the user gender",
                    "enum": [
                        "Unknown",
                        "Male",
                        "Female"
                    ],
                    "type": "string"
                },
                "weight": {
                    "format": "int32",
                    "description": "Gets and sets the user's weight",
                    "type": "integer"
                },
                "height": {
                    "format": "int32",
                    "description": "Gets and sets the user's Height",
                    "type": "integer"
                },
                "actionPlanTemplateIds": {
                    "description": "Gets or sets the list of action plan template ids to which the user \r\nwill be assigned upon account creation",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conditions": {
                    "description": "Gets or sets the list of health conditions that will be displayed to the user during consent collection",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "x-id": "OnboardingRequest"
        },
        "OnboardingResponse": {
            "description": "The Onboarding response",
            "type": "object",
            "properties": {
                "invitationCode": {
                    "description": "Gets or sets the invitation code.",
                    "type": "string"
                },
                "inviteUrl": {
                    "description": "Get Or Set the invite url",
                    "type": "string"
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "OnboardingResponse"
        },
        "SleepResponse": {
            "description": "The sleep response.",
            "type": "object",
            "properties": {
                "sleepActivities": {
                    "description": "The collection of summaries",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Sleep"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "SleepResponse"
        },
        "Sleep": {
            "description": "sleep information",
            "type": "object",
            "properties": {
                "sleepId": {
                    "description": "The unique identifier for the Sleep Activity",
                    "type": "string"
                },
                "userId": {
                    "description": "The unique identifier of the user",
                    "type": "string"
                },
                "startTime": {
                    "format": "date-time",
                    "description": "The ISO 8601 formatted start time of the activity",
                    "type": "string"
                },
                "endTime": {
                    "format": "date-time",
                    "description": "The ISO 8601 formatted end time of the activity",
                    "type": "string"
                },
                "sleepSummary": {
                    "$ref": "#/definitions/SleepSummary",
                    "description": "The Sleep Summary details"
                },
                "wakeState": {
                    "description": "The WakeState at the end of Activity, possible values are WideAwake, Tired, Sleepy",
                    "enum": [
                        "Unknown",
                        "WideAwake",
                        "Tired",
                        "Sleepy"
                    ],
                    "type": "string"
                },
                "lastModifiedBy": {
                    "$ref": "#/definitions/Audit",
                    "description": "Gets or sets the audit record for the last time the entity was changed"
                },
                "createdBy": {
                    "$ref": "#/definitions/Audit",
                    "description": "Gets or sets the audit record for when the entity was first created"
                }
            },
            "x-id": "Sleep"
        },
        "SleepSummary": {
            "description": "SleepSummary Type",
            "type": "object",
            "properties": {
                "bedtime": {
                    "description": "The ISO 8601 formatted time the user went to bed",
                    "type": "string"
                },
                "fallAsleepDuration": {
                    "description": "The ISO 8601 formatted time the user took to fall asleep",
                    "type": "string"
                },
                "wakeupTime": {
                    "description": "The ISO 8601 formatted time the user woke up",
                    "type": "string"
                },
                "sleepDuration": {
                    "description": "The ISO 8601 formatted time the user was asleep during the activity",
                    "type": "string"
                }
            },
            "x-id": "SleepSummary"
        },
        "Audit": {
            "description": "Tracks when a change was made to a tracked entity, by whom, and by which application",
            "type": "object",
            "properties": {
                "timestamp": {
                    "format": "date-time",
                    "description": "Gets or sets when the change was made",
                    "type": "string"
                },
                "personId": {
                    "description": "Gets or sets who made the change",
                    "type": "string"
                },
                "applicationId": {
                    "description": "Gets or sets which application that made the change",
                    "type": "string"
                },
                "auditAction": {
                    "description": "Gets or sets the audit action for the change",
                    "enum": [
                        "Unknown",
                        "Created",
                        "Updated",
                        "Deleted"
                    ],
                    "type": "string"
                }
            },
            "x-id": "Audit"
        },
        "TaskTrackingOccurrence": {
            "description": "The tracking object for an action plan task occurrence",
            "type": "object",
            "properties": {
                "taskId": {
                    "format": "uuid",
                    "description": "Gets or sets the Id of the task",
                    "type": "string"
                },
                "trackingDateTime": {
                    "description": "The date and time of the task occurrence.",
                    "type": "object",
                    "x-id": "ZonedDateTime"
                }
            },
            "x-id": "TaskTrackingOccurrence"
        },
        "ActionPlanTasksResponse[TimelineTask]": {
            "description": "The action plans task collection response",
            "type": "object",
            "properties": {
                "tasks": {
                    "description": "The collection of tasks",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimelineTask"
                    }
                },
                "nextLink": {
                    "description": "The URI for the next page of data",
                    "type": "string"
                }
            },
            "x-id": "ActionPlanTasksResponse`1"
        },
        "TimelineTask": {
            "description": "An entry on the timeline",
            "type": "object",
            "properties": {
                "taskId": {
                    "format": "uuid",
                    "description": "ID of the task this timeline task is associated with",
                    "type": "string"
                },
                "taskName": {
                    "description": "Name of the task",
                    "type": "string"
                },
                "taskType": {
                    "description": "Type of the task",
                    "enum": [
                        "Unknown",
                        "BloodPressure",
                        "Other"
                    ],
                    "type": "string"
                },
                "taskImageUrl": {
                    "description": "Task image URL",
                    "type": "string"
                },
                "timelineSnapshots": {
                    "description": "Collection of timeline snapshots for the task",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimelineSnapshot"
                    }
                }
            },
            "x-id": "TimelineTask"
        },
        "TimelineSnapshot": {
            "description": "A snapshot of the timeline",
            "type": "object",
            "properties": {
                "schedules": {
                    "description": "Collection of schedules for the timeline entry",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimelineSchedule"
                    }
                },
                "completionMetrics": {
                    "$ref": "#/definitions/TimelineSnapshotCompletionMetrics",
                    "description": "Completion metrics specifying the recurrence and type for the timeline entry"
                },
                "unscheduledOccurrences": {
                    "description": "The occurrences which are marked as out of window and are thus not associated with a schedule",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimelineScheduleOccurrence"
                    }
                },
                "effectiveStartInstant": {
                    "description": "The effective start time instant for the timeline snapshot",
                    "type": "object",
                    "x-id": "Instant"
                },
                "effectiveEndInstant": {
                    "description": "The effective end time instant for the timeline snapshot",
                    "type": "object",
                    "x-id": "Instant"
                }
            },
            "x-id": "TimelineSnapshot"
        },
        "TimelineSchedule": {
            "description": "The schedule for the timeline entry",
            "type": "object",
            "properties": {
                "adherenceDelta": {
                    "description": "The adherence delta for the task",
                    "type": "object",
                    "x-id": "Nullable`1"
                },
                "localDateTime": {
                    "description": "The local date and time of the schedule",
                    "type": "object",
                    "x-id": "LocalDateTime"
                },
                "type": {
                    "description": "The type of schedule",
                    "enum": [
                        "Unknown",
                        "Zoned",
                        "Local",
                        "Unscheduled",
                        "Anytime"
                    ],
                    "type": "string"
                },
                "recurrenceType": {
                    "description": "The recurrence type of the schedule",
                    "enum": [
                        "Unknown",
                        "None",
                        "Minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly",
                        "Annually"
                    ],
                    "type": "string"
                },
                "occurrences": {
                    "description": "The occurrences which are bucketed into the schedule",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimelineScheduleOccurrence"
                    }
                }
            },
            "x-id": "TimelineSchedule"
        },
        "TimelineSnapshotCompletionMetrics": {
            "description": "An entry on the timeline",
            "type": "object",
            "properties": {
                "recurrenceType": {
                    "description": "The type of recurrence",
                    "enum": [
                        "Unknown",
                        "None",
                        "Minute",
                        "Hourly",
                        "Daily",
                        "Weekly",
                        "Monthly",
                        "Annually"
                    ],
                    "type": "string"
                },
                "completionType": {
                    "description": "The type of completion (Frequency/Schedule)",
                    "enum": [
                        "Unknown",
                        "Frequency",
                        "Scheduled"
                    ],
                    "type": "string"
                },
                "requiredNumberOfOccurrences": {
                    "format": "int32",
                    "description": "The required number of occurrences required for the completion over the recurring period",
                    "type": "integer"
                }
            },
            "x-id": "TimelineSnapshotCompletionMetrics"
        },
        "TimelineScheduleOccurrence": {
            "description": "The schedule for the timeline entry",
            "type": "object",
            "properties": {
                "id": {
                    "format": "uuid",
                    "description": "The task tracking entry Id for the schedule occurrence",
                    "type": "string"
                },
                "localDateTime": {
                    "description": "The local date and time for the occurrence",
                    "type": "object",
                    "x-id": "LocalDateTime"
                },
                "inWindow": {
                    "description": "If the occurrence occurred in or out of window",
                    "type": "boolean"
                }
            },
            "x-id": "TimelineScheduleOccurrence"
        }
    }
}
