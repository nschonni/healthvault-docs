<Type Name="HealthRecordAccessor" FullName="Microsoft.Health.HealthRecordAccessor">
  <TypeSignature Language="C#" Value="public class HealthRecordAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthRecordAccessor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.HealthRecordAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthRecordAccessor" />
  <TypeSignature Language="F#" Value="type HealthRecordAccessor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the API set used to access a health record for an individual. 
            </summary>
    <remarks>
            A HealthRecordAccessor represents a person's view of a health record.
            This view can vary based upon the access rights the person has to the
            record. More than one person might have access to the same record but have
            different views. For instance, a husband might have a HealthRecordAccessor
            instance for himself and another for his wife's health record to which 
            she granted him access.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthRecordAccessor (Microsoft.Health.ApplicationConnection connection, Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Health.ApplicationConnection connection, valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.#ctor(Microsoft.Health.ApplicationConnection,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As ApplicationConnection, id As Guid)" />
      <MemberSignature Language="F#" Value="new Microsoft.Health.HealthRecordAccessor : Microsoft.Health.ApplicationConnection * Guid -&gt; Microsoft.Health.HealthRecordAccessor" Usage="new Microsoft.Health.HealthRecordAccessor (connection, id)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="connection">
            An instance of a connection to which the record 
            operations will be directed.
            </param>
        <param name="id">
            The unique identifier for the record.
            </param>
        <summary>
            Creates a new instance of the <see cref="T:Microsoft.Health.HealthRecordAccessor" />
            class. 
            </summary>
        <remarks>
            This constructor creates a view of a personal health record.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="connection" /> parameter is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            The <paramref name="id" /> parameter is Guid.Empty.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AssociateAlternateId">
      <MemberSignature Language="C#" Value="public void AssociateAlternateId (string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssociateAlternateId(string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.AssociateAlternateId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssociateAlternateId (alternateId As String)" />
      <MemberSignature Language="F#" Value="member this.AssociateAlternateId : string -&gt; unit" Usage="healthRecordAccessor.AssociateAlternateId alternateId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alternateId">
            The alternate ID.
            </param>
        <summary>
            Associates an alternate ID with this record.
            </summary>
        <remarks>
            An alternate ID can be used to store an association between an ID that the
            application understands and the person and record IDs used by HealthVault.
            
            The alternate id string must be from 1-255 characters in length. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The alternateId parameter is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been created.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public Microsoft.Health.ApplicationConnection Connection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.ApplicationConnection Connection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordAccessor.Connection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connection As ApplicationConnection" />
      <MemberSignature Language="F#" Value="member this.Connection : Microsoft.Health.ApplicationConnection" Usage="Microsoft.Health.HealthRecordAccessor.Connection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to the HealthVault service that
            created this <see cref="T:Microsoft.Health.HealthRecordAccessor" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromXml">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.HealthRecordAccessor CreateFromXml (Microsoft.Health.ApplicationConnection connection, System.Xml.XPath.XPathNavigator navigator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.HealthRecordAccessor CreateFromXml(class Microsoft.Health.ApplicationConnection connection, class System.Xml.XPath.XPathNavigator navigator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.CreateFromXml(Microsoft.Health.ApplicationConnection,System.Xml.XPath.XPathNavigator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromXml (connection As ApplicationConnection, navigator As XPathNavigator) As HealthRecordAccessor" />
      <MemberSignature Language="F#" Value="static member CreateFromXml : Microsoft.Health.ApplicationConnection * System.Xml.XPath.XPathNavigator -&gt; Microsoft.Health.HealthRecordAccessor" Usage="Microsoft.Health.HealthRecordAccessor.CreateFromXml (connection, navigator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordAccessor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="navigator" Type="System.Xml.XPath.XPathNavigator" />
      </Parameters>
      <Docs>
        <param name="connection">
            A connection for the current user.
            </param>
        <param name="navigator">
            The XML containing the record information.
            </param>
        <summary>
            Creates an instance of a HealthRecordAccessor object using
            the specified XML.
            </summary>
        <returns>
            A new instance of a HealthRecordAccessor object containing the
            record information.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="connection" /> or <paramref name="navigator" /> 
            parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSearcher">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordSearcher CreateSearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordSearcher CreateSearcher() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.CreateSearcher" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSearcher () As HealthRecordSearcher" />
      <MemberSignature Language="F#" Value="member this.CreateSearcher : unit -&gt; Microsoft.Health.HealthRecordSearcher" Usage="healthRecordAccessor.CreateSearcher " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordSearcher</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Creates a new HealthRecordSearcher for this record.
            </summary>
        <returns>
            A HealthRecordSearcher that searches for items associated
            with this record.
            </returns>
        <remarks>
            You can also call the <see cref="T:Microsoft.Health.HealthRecordSearcher" /> constructor 
            directly and pass in a reference to this 
            <see cref="T:Microsoft.Health.HealthRecordAccessor" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSearcher">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordSearcher CreateSearcher (params Guid[] typeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordSearcher CreateSearcher(valuetype System.Guid[] typeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.CreateSearcher(System.Guid[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSearcher (ParamArray typeIds As Guid()) As HealthRecordSearcher" />
      <MemberSignature Language="F#" Value="member this.CreateSearcher : Guid[] -&gt; Microsoft.Health.HealthRecordSearcher" Usage="healthRecordAccessor.CreateSearcher typeIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordSearcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeIds" Type="System.Guid[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeIds">
             A list of unique type ids to filter on.
             </param>
        <summary>
             Creates a new HealthRecordSearcher for a list of specific types.
             </summary>
        <returns>
             A <see cref="T:Microsoft.Health.HealthRecordSearcher" /> that searches for items with specific type IDs
             within this record.
             </returns>
        <remarks>
             The method adds a filter to the <see cref="T:Microsoft.Health.HealthRecordSearcher" /> that only returns
             items of the specified type IDs. That filter may be accessed through the
             returned searcher using searcher.Filters[0].
             
             You can also call the <see cref="T:Microsoft.Health.HealthRecordSearcher" /> constructor 
             directly and pass in a reference to this 
             <see cref="T:Microsoft.Health.HealthRecordAccessor" />.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisassociateAlternateId">
      <MemberSignature Language="C#" Value="public void DisassociateAlternateId (string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisassociateAlternateId(string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.DisassociateAlternateId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisassociateAlternateId (alternateId As String)" />
      <MemberSignature Language="F#" Value="member this.DisassociateAlternateId : string -&gt; unit" Usage="healthRecordAccessor.DisassociateAlternateId alternateId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alternateId">
            The alternate ID.
            </param>
        <summary>
            Disassociates an alternate ID with a record.
            </summary>
        <remarks>
            Removes the association between the alternate ID and the record/person.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The alternateId parameter is null.
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlternateIds">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;string&gt; GetAlternateIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;string&gt; GetAlternateIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetAlternateIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAlternateIds () As Collection(Of String)" />
      <MemberSignature Language="F#" Value="member this.GetAlternateIds : unit -&gt; System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="healthRecordAccessor.GetAlternateIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the list of alternate IDs that are associated with a record.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            If there are no associated alternate IDs, this method will return an
            empty list. 
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordItem GetItem (Guid itemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordItem GetItem(valuetype System.Guid itemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetItem(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (itemId As Guid) As HealthRecordItem" />
      <MemberSignature Language="F#" Value="member this.GetItem : Guid -&gt; Microsoft.Health.HealthRecordItem" Usage="healthRecordAccessor.GetItem itemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="itemId">
            The ID of the health record item to retrieve.
            </param>
        <summary>
            Gets the health record item specified by its ID.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthRecordItem" /> with the default data sections (Core and XML) 
            filled out.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItem">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordItem GetItem (Guid itemId, Microsoft.Health.HealthRecordItemSections sections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordItem GetItem(valuetype System.Guid itemId, valuetype Microsoft.Health.HealthRecordItemSections sections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetItem(System.Guid,Microsoft.Health.HealthRecordItemSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItem (itemId As Guid, sections As HealthRecordItemSections) As HealthRecordItem" />
      <MemberSignature Language="F#" Value="member this.GetItem : Guid * Microsoft.Health.HealthRecordItemSections -&gt; Microsoft.Health.HealthRecordItem" Usage="healthRecordAccessor.GetItem (itemId, sections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemId" Type="System.Guid" />
        <Parameter Name="sections" Type="Microsoft.Health.HealthRecordItemSections" />
      </Parameters>
      <Docs>
        <param name="itemId">
            The ID of the health record item to retrieve.
            </param>
        <param name="sections">
            The data sections of the health record item to retrieve.
            </param>
        <summary>
            Gets the health record item specified by its ID.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthRecordItem" /> with the specified data sections 
            filled out.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByType">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordItemCollection GetItemsByType (Guid typeId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordItemCollection GetItemsByType(valuetype System.Guid typeId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetItemsByType(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByType (typeId As Guid) As HealthRecordItemCollection" />
      <MemberSignature Language="F#" Value="member this.GetItemsByType : Guid -&gt; Microsoft.Health.HealthRecordItemCollection" Usage="healthRecordAccessor.GetItemsByType typeId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="typeId">
            A unique identifier for the type of health record item to filter 
            on.
            </param>
        <summary>
            Gets the health record items related to this record filtered on the
            specified type.
            </summary>
        <returns>
            A collection of the health record items related to this record
            that match the specified type identifier.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByType">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordItemCollection GetItemsByType (Guid typeId, Microsoft.Health.HealthRecordItemSections sections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordItemCollection GetItemsByType(valuetype System.Guid typeId, valuetype Microsoft.Health.HealthRecordItemSections sections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetItemsByType(System.Guid,Microsoft.Health.HealthRecordItemSections)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByType (typeId As Guid, sections As HealthRecordItemSections) As HealthRecordItemCollection" />
      <MemberSignature Language="F#" Value="member this.GetItemsByType : Guid * Microsoft.Health.HealthRecordItemSections -&gt; Microsoft.Health.HealthRecordItemCollection" Usage="healthRecordAccessor.GetItemsByType (typeId, sections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeId" Type="System.Guid" />
        <Parameter Name="sections" Type="Microsoft.Health.HealthRecordItemSections" />
      </Parameters>
      <Docs>
        <param name="typeId">
            A unique identifier for the type of health record item to filter 
            on.
            </param>
        <param name="sections">
            The data sections of the health record item to retrieve.
            </param>
        <summary>
            Gets the health record items related to this record filtered on the
            specified type.
            </summary>
        <returns>
            A collection of the health record items related to this record
            that match the specified type identifier.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByType">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordItemCollection GetItemsByType (Guid typeId, Microsoft.Health.HealthRecordView view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordItemCollection GetItemsByType(valuetype System.Guid typeId, class Microsoft.Health.HealthRecordView view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetItemsByType(System.Guid,Microsoft.Health.HealthRecordView)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByType (typeId As Guid, view As HealthRecordView) As HealthRecordItemCollection" />
      <MemberSignature Language="F#" Value="member this.GetItemsByType : Guid * Microsoft.Health.HealthRecordView -&gt; Microsoft.Health.HealthRecordItemCollection" Usage="healthRecordAccessor.GetItemsByType (typeId, view)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeId" Type="System.Guid" />
        <Parameter Name="view" Type="Microsoft.Health.HealthRecordView" />
      </Parameters>
      <Docs>
        <param name="typeId">
            A unique identifier for the type of health record item to filter 
            on.
            </param>
        <param name="view">
            The view to use when retrieving the data.
            </param>
        <summary>
            Gets the health record items related to this record filtered on the
            specified type.
            </summary>
        <returns>
            A collection of the health record items related to this record
            that match the specified type identifier.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidGroupMembership">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership (System.Collections.Generic.IList&lt;Guid&gt; applicationIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applicationIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetValidGroupMembership(System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidGroupMembership (applicationIds As IList(Of Guid)) As Collection(Of HealthRecordItem)" />
      <MemberSignature Language="F#" Value="member this.GetValidGroupMembership : System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;" Usage="healthRecordAccessor.GetValidGroupMembership applicationIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationIds">
            A collection of unique application identifiers for which to 
            search for group memberships.  For a null or empty application identifier 
            list, return all valid group memberships for the record.  Otherwise, 
            return only those group memberships last updated by one of the 
            supplied application identifiers.
            </param>
        <summary>
            Gets valid group memberships for a record.
            </summary>
        <returns>
            A List of HealthRecordItems representing the valid group memberships.
            </returns>
        <remarks>
            Group membership thing types allow an application to signify that the
            record belongs to an application defined group.  A record in the group may be 
            eligible for special programs offered by other applications, for example.  
            Applications then need a away to query for valid group memberships.
            <br />
            Valid group memberships are those memberships which are not expired, and whose
            last updating application is authorized by the last updating person to 
            read and delete the membership.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs while contacting the HealthVault service.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public virtual string GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXml () As String" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; string&#xA;override this.GetXml : unit -&gt; string" Usage="healthRecordAccessor.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Retrieves the XML representation of the <see cref="T:Microsoft.Health.HealthRecordAccessor" />.
            </summary>
        <returns>
            A string containing the XML representation of the 
            <see cref="T:Microsoft.Health.HealthRecordAccessor" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordAccessor.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="Microsoft.Health.HealthRecordAccessor.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the record identifier.
            </summary>
        <value>
            A globally unique identifier (GUID) for the record.
            </value>
        <remarks>
            The record identifier is issued when the record is created. Creating
            the account automatically creates a self record as well.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Health.Location Location { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Health.Location Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Health.HealthRecordAccessor.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Location" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.Health.Location with get, set" Usage="Microsoft.Health.HealthRecordAccessor.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.Location</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the location of the person that this record is for.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItem">
      <MemberSignature Language="C#" Value="public void NewItem (Microsoft.Health.HealthRecordItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NewItem(class Microsoft.Health.HealthRecordItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.NewItem(Microsoft.Health.HealthRecordItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NewItem (item As HealthRecordItem)" />
      <MemberSignature Language="F#" Value="member this.NewItem : Microsoft.Health.HealthRecordItem -&gt; unit" Usage="healthRecordAccessor.NewItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.HealthRecordItem" />
      </Parameters>
      <Docs>
        <param name="item">
            The health record item to be created in the HealthVault service.
            </param>
        <summary>
            Creates a new health record item associated with this record in the 
            HealthVault service.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The HealthRecordItem supplied was null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="NewItems">
      <MemberSignature Language="C#" Value="public void NewItems (System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NewItems(class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.NewItems(System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub NewItems (items As IList(Of HealthRecordItem))" />
      <MemberSignature Language="F#" Value="member this.NewItems : System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; -&gt; unit" Usage="healthRecordAccessor.NewItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items">
            The health record items from which to create new instances.
            </param>
        <summary>
            Creates new health record items associated with the record.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been created.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            At least one HealthRecordItem in the supplied list was null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions (System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemTypeDefinition&gt; healthRecordItemTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions(class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItemTypeDefinition&gt; healthRecordItemTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.QueryPermissions(System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemTypeDefinition})" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryPermissions (healthRecordItemTypes As IList(Of HealthRecordItemTypeDefinition)) As Collection(Of HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="member this.QueryPermissions : System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemTypeDefinition&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="healthRecordAccessor.QueryPermissions healthRecordItemTypes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="healthRecordItemTypes" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemTypeDefinition&gt;" />
      </Parameters>
      <Docs>
        <param name="healthRecordItemTypes">
            A collection of <see cref="T:Microsoft.Health.HealthRecordItemTypeDefinition" /> 
            representing the health record item types 
            for which the permissions are being queried. 
            </param>
        <summary>
            Returns a list of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            objects which represent the permissions that the current
            authenticated person has for the HealthRecordItemTypes specified
            in the current health record when using the current application.
            </summary>
        <returns>
            A list of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            objects which represent the permissions that the current
            authenticated person has for the HealthRecordItemTypes specified
            in the current health record when using the current application.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions (System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.QueryPermissions(System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryPermissions (healthRecordItemTypeIds As IList(Of Guid)) As Collection(Of HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="member this.QueryPermissions : System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="healthRecordAccessor.QueryPermissions healthRecordItemTypeIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record.
            </summary>
        <returns>
            A list of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            objects which represent the permissions that the current
            authenticated person has for the HealthRecordItemTypes specified
            in the current health record when using the current application.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If there is an exception during executing the request to HealthVault. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissionsByTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Guid,Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes (System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.QueryPermissionsByTypes(System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryPermissionsByTypes (healthRecordItemTypeIds As IList(Of Guid)) As IDictionary(Of Guid, HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="member this.QueryPermissionsByTypes : System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="healthRecordAccessor.QueryPermissionsByTypes healthRecordItemTypeIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Guid,Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="healthRecordItemTypeIds">
            A collection of unique identifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types
            in this  record.
            </summary>
        <returns>
            Returns a dictionary of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            with health record item types as the keys. 
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty dictionary is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            <b> null </b> will be returned for that type in the dictionary.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If there is an exception during executing the request to HealthVault. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryRecordPermissions">
      <MemberSignature Language="C#" Value="public Microsoft.Health.HealthRecordPermissions QueryRecordPermissions (System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Health.HealthRecordPermissions QueryRecordPermissions(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.QueryRecordPermissions(System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Function QueryRecordPermissions (healthRecordItemTypeIds As IList(Of Guid)) As HealthRecordPermissions" />
      <MemberSignature Language="F#" Value="member this.QueryRecordPermissions : System.Collections.Generic.IList&lt;Guid&gt; -&gt; Microsoft.Health.HealthRecordPermissions" Usage="healthRecordAccessor.QueryRecordPermissions healthRecordItemTypeIds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordPermissions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record as well as the other permission settings such as <see cref="P:Microsoft.Health.HealthRecordPermissions.MeaningfulUseOptIn">MeaningfulUseOptIn</see>.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthRecordPermissions" /> object
            which contains a collection of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> objects and
            other permission settings.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned for <see cref="T:Microsoft.Health.HealthRecordPermissions" /> object's ItemTypePermissions property.
            If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveApplicationAuthorization">
      <MemberSignature Language="C#" Value="public void RemoveApplicationAuthorization ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveApplicationAuthorization() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.RemoveApplicationAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveApplicationAuthorization ()" />
      <MemberSignature Language="F#" Value="member this.RemoveApplicationAuthorization : unit -&gt; unit" Usage="healthRecordAccessor.RemoveApplicationAuthorization " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Releases the authorization of the application on the health record.
            </summary>
        <remarks>
            Once the application releases the authorization to the health record, 
            calling any methods of this <see cref="T:Microsoft.Health.HealthRecordAccessor" /> will result 
            in a <see cref="T:Microsoft.Health.HealthServiceAccessDeniedException" />."
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors during the authorization release.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (Microsoft.Health.HealthRecordItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItem(class Microsoft.Health.HealthRecordItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.RemoveItem(Microsoft.Health.HealthRecordItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (item As HealthRecordItem)" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Health.HealthRecordItem -&gt; unit" Usage="healthRecordAccessor.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.HealthRecordItem" />
      </Parameters>
      <Docs>
        <param name="item">
            The health record item to remove.
            </param>
        <summary>
            Marks the specified health record item as deleted.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            Health record items are never completely deleted. Instead, they 
            are marked as deleted and are ignored for most normal operations. 
            Items can be undeleted by contacting customer service.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="item" /> parameter is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There are errors that remove the health record item from 
            the server.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (Microsoft.Health.HealthRecordItemKey itemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItem(class Microsoft.Health.HealthRecordItemKey itemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.RemoveItem(Microsoft.Health.HealthRecordItemKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (itemId As HealthRecordItemKey)" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Health.HealthRecordItemKey -&gt; unit" Usage="healthRecordAccessor.RemoveItem itemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemId" Type="Microsoft.Health.HealthRecordItemKey" />
      </Parameters>
      <Docs>
        <param name="itemId">
             The unique item identifier to remove.
             </param>
        <summary>
             Marks the specified health record item as deleted.
             </summary>
        <remarks>
             This method accesses the HealthVault service across the network.
             <br /><br />
             Health record items are never completely deleted. They are marked 
             as deleted and are ignored for most normal operations. Items can 
             be undeleted by contacting customer service.
             </remarks>
        <exception cref="T:System.ArgumentException">
             The <paramref name="itemId" /> parameter is Guid.Empty.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             Errors removed the health record items from the server.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; itemsToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItem&gt; itemsToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.RemoveItems(System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (itemsToRemove As IList(Of HealthRecordItem))" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; -&gt; unit" Usage="healthRecordAccessor.RemoveItems itemsToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToRemove" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToRemove">
            A list of the health record items to remove.
            </param>
        <summary>
            Marks the specified health record item as deleted.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            Health record items are never completely deleted. They are marked
            as deleted and are ignored for most normal operations. Items can 
            be undeleted by contacting customer service.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="itemsToRemove" /> parameter is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors removed the health record items from the server.
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been removed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt; itemsToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItemKey&gt; itemsToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.RemoveItems(System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemKey})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (itemsToRemove As IList(Of HealthRecordItemKey))" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt; -&gt; unit" Usage="healthRecordAccessor.RemoveItems itemsToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToRemove" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToRemove">
            The unique item identifiers of the items to remove.
            </param>
        <summary>
            Marks the specified health record item as deleted.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            Health record items are never completely deleted. They are marked 
            as deleted and are ignored for most normal operations. Items can 
            be undeleted by contacting customer service.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="itemsToRemove" /> parameter is empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors removed the health record items from the server.
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been removed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendMessageToCustodiansFromApplication">
      <MemberSignature Language="C#" Value="public void SendMessageToCustodiansFromApplication (bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendMessageToCustodiansFromApplication(bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.SendMessageToCustodiansFromApplication(System.Boolean,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendMessageToCustodiansFromApplication (addressMustBeValidated As Boolean, senderMailboxName As String, senderDisplayName As String, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="member this.SendMessageToCustodiansFromApplication : bool * string * string * string * string * string -&gt; unit" Usage="healthRecordAccessor.SendMessageToCustodiansFromApplication (addressMustBeValidated, senderMailboxName, senderDisplayName, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addressMustBeValidated" Type="System.Boolean" />
        <Parameter Name="senderMailboxName" Type="System.String" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addressMustBeValidated">
            If true, HealthVault will only send the message to custodians with 
            validated e-mail addresses. If false, the message will
            be sent even if the custodians' addresses have not been validated.
            </param>
        <param name="senderMailboxName">
            An application specified mailbox name that's sending the message.
            The mailbox name is appended to the application's domain name to 
            form the From email address of the message. This parameter should
            only contain the characters before the @ symbol of the email 
            address.
            </param>
        <param name="senderDisplayName">
            The message sender's display name.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message originating from the application 
            to custodians of the health record.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            
            If the domain name of the application has not been previously 
            set (usually through app registration), this method will throw 
            a <see cref="T:Microsoft.Health.HealthServiceException" />.      
            
            The calling application and the person through which authorization to the 
            record was obtained must be authorized for the record. 
            The person must be either authenticated, or if the person is offline,
            their person Id specified as the offline person Id.
            See <see cref="T:Microsoft.Health.Web.OfflineWebApplicationConnection" /> 
            for more information.
            </remarks>
        <exception cref="T:System.ArgumentException"> 
            if <paramref name="senderMailboxName" /> is null or empty,
            -or-
            if <paramref name="senderDisplayName" /> is null or empty,
            -or-
            if <paramref name="subject" /> is null or empty,
            -or-
            if <paramref name="textBody" /> and <paramref name="htmlBody" />
            are both null or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If the server returned a failure when making the request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public void UpdateItem (Microsoft.Health.HealthRecordItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateItem(class Microsoft.Health.HealthRecordItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.UpdateItem(Microsoft.Health.HealthRecordItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateItem (item As HealthRecordItem)" />
      <MemberSignature Language="F#" Value="member this.UpdateItem : Microsoft.Health.HealthRecordItem -&gt; unit" Usage="healthRecordAccessor.UpdateItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Health.HealthRecordItem" />
      </Parameters>
      <Docs>
        <param name="item">
             The health record item to be updated.
             </param>
        <summary>
             Updates the specified health record item.
             </summary>
        <remarks>
             Only new items are updated with the appropriate unique identifier. 
             All other sections must be updated manually.
             <br /><br />
             This method accesses the HealthVault service across the network.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="item" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The <paramref name="item" /> parameter does not have an ID.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItems">
      <MemberSignature Language="C#" Value="public void UpdateItems (System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; itemsToUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateItems(class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItem&gt; itemsToUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthRecordAccessor.UpdateItems(System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateItems (itemsToUpdate As IList(Of HealthRecordItem))" />
      <MemberSignature Language="F#" Value="member this.UpdateItems : System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; -&gt; unit" Usage="healthRecordAccessor.UpdateItems itemsToUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToUpdate" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToUpdate">
             The health record items to be updated.
             </param>
        <summary>
             Updates the specified health record items in one batch call to 
             the service.
             </summary>
        <remarks>
             Only new items are updated with the appropriate unique identifier. 
             All other sections must be updated manually.
             <br /><br />
             This method accesses the HealthVault service across the network.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="itemsToUpdate" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The <paramref name="itemsToUpdate" /> contains a <b>null</b> member or
             a <see cref="T:Microsoft.Health.HealthRecordItem" /> instance that does not have an ID.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             The exception's Error property will contain the index of the
             item on which the failure occurred in the ErrorInfo property. If any failures occur, 
             no items will have been updated.
             </exception>
      </Docs>
    </Member>
  </Members>
</Type>