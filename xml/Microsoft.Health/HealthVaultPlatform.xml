<Type Name="HealthVaultPlatform" FullName="Microsoft.Health.HealthVaultPlatform">
  <TypeSignature Language="C#" Value="public static class HealthVaultPlatform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit HealthVaultPlatform extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.HealthVaultPlatform" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthVaultPlatform" />
  <TypeSignature Language="F#" Value="type HealthVaultPlatform = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides low-level access to the HealthVault service.
            </summary>
    <remarks>
            HealthServicePlatform provides access to the HealthVault service at a low level.
            
            For an easier-to-use interface, please see the following abstractions:
            <b>Data item operations</b><see cref="T:Microsoft.Health.HealthRecordAccessor" /> and <see cref="T:Microsoft.Health.HealthRecordInfo" /></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddChildApplication">
      <MemberSignature Language="C#" Value="public static Guid AddChildApplication (Microsoft.Health.Web.OfflineWebApplicationConnection connection, Microsoft.Health.ApplicationInfo applicationConfigurationInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid AddChildApplication(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, class Microsoft.Health.ApplicationInfo applicationConfigurationInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.AddChildApplication(Microsoft.Health.Web.OfflineWebApplicationConnection,Microsoft.Health.ApplicationInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AddChildApplication (connection As OfflineWebApplicationConnection, applicationConfigurationInformation As ApplicationInfo) As Guid" />
      <MemberSignature Language="F#" Value="static member AddChildApplication : Microsoft.Health.Web.OfflineWebApplicationConnection * Microsoft.Health.ApplicationInfo -&gt; Guid" Usage="Microsoft.Health.HealthVaultPlatform.AddChildApplication (connection, applicationConfigurationInformation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="applicationConfigurationInformation" Type="Microsoft.Health.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="connection">
             The connection to use to add the application.
             </param>
        <param name="applicationConfigurationInformation">
             Configuration information about the application being provisioned.
             </param>
        <summary>
             Adds a HealthVault application instance for a "child" application of the calling
             application.
             </summary>
        <returns>
             The new application identifier for the new application provided by HealthVault.
             </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="connection" /> or <paramref name="applicationConfigurationInformation" />
             is <b>null</b>.
             </exception>
        <exception cref="T:System.ArgumentException">
             If <see cref="P:Microsoft.Health.ApplicationInfo.Name" />, <see cref="P:Microsoft.Health.ApplicationInfo.PublicKeys" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.OfflineBaseAuthorizations" />, <see cref="P:Microsoft.Health.ApplicationInfo.Description" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.AuthorizationReason" />, or <see cref="P:Microsoft.Health.ApplicationInfo.LargeLogo" /> 
             is not specified.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             If there is an error when the HealthVault service is called.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="AllocateConnectPackageId">
      <MemberSignature Language="C#" Value="public static string AllocateConnectPackageId (Microsoft.Health.Web.OfflineWebApplicationConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string AllocateConnectPackageId(class Microsoft.Health.Web.OfflineWebApplicationConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.AllocateConnectPackageId(Microsoft.Health.Web.OfflineWebApplicationConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllocateConnectPackageId (connection As OfflineWebApplicationConnection) As String" />
      <MemberSignature Language="F#" Value="static member AllocateConnectPackageId : Microsoft.Health.Web.OfflineWebApplicationConnection -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.AllocateConnectPackageId connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
            The HealthVault connection to use for the operation.
            </param>
        <summary>
            Allocates a package ID within HealthVault and returns it.
            </summary>
        <returns>
            A token that the application must give to the patient to use when validating the
            connection request.
            </returns>
        <remarks>
          <para>The package ID is allocated as a place holder for information that 
            is identifiable but not yet available through the HealthVault service.
            The returned package ID token should be stored or given to a patient, 
            then used in a call to CreateConnectPackage()
            to send the package data to the HealthVault service.</para>
          <para>The package ID is not a GUID.  It uses a shorter format that is more
            convenient for offline delivery and manual data entry.  The HealthVault 
            service guarantees that each package ID is unique for the lifetime of the 
            package.  Once the package has been accepted by the patient using the 
            HealthVault Shell, or explicitly deleted using the API, the package ID is 
            deallocated and may be reused.</para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="AssociateAlternateId">
      <MemberSignature Language="C#" Value="public static void AssociateAlternateId (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AssociateAlternateId(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.AssociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AssociateAlternateId (connection As ApplicationConnection, accessor As HealthRecordAccessor, alternateId As String)" />
      <MemberSignature Language="F#" Value="static member AssociateAlternateId : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.AssociateAlternateId (connection, accessor, alternateId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="alternateId">
            The alternate ID.
            </param>
        <summary>
            Associates an alternate ID with a record.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The connection, accessor, or alternateId parameters are null
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate ID is already associated by this application, the ErrorCode property
            will be set to DuplicateAlternateId.
            If the number of alternate IDs associated with a record exceeds the limit, the ErrorCode
            property will be set to AlternateIdsLimitExceeded.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItemTypeCache">
      <MemberSignature Language="C#" Value="public static void ClearItemTypeCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearItemTypeCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.ClearItemTypeCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearItemTypeCache ()" />
      <MemberSignature Language="F#" Value="static member ClearItemTypeCache : unit -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.ClearItemTypeCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary> 
            Removes all item type definitions from the client-side cache.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectPackage">
      <MemberSignature Language="C#" Value="public static string CreateConnectPackage (Microsoft.Health.Package.ConnectPackageCreationParameters creationParameters, Microsoft.Health.ItemTypes.PasswordProtectedPackage connectPackage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateConnectPackage(class Microsoft.Health.Package.ConnectPackageCreationParameters creationParameters, class Microsoft.Health.ItemTypes.PasswordProtectedPackage connectPackage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.CreateConnectPackage(Microsoft.Health.Package.ConnectPackageCreationParameters,Microsoft.Health.ItemTypes.PasswordProtectedPackage)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateConnectPackage (creationParameters As ConnectPackageCreationParameters, connectPackage As PasswordProtectedPackage) As String" />
      <MemberSignature Language="F#" Value="static member CreateConnectPackage : Microsoft.Health.Package.ConnectPackageCreationParameters * Microsoft.Health.ItemTypes.PasswordProtectedPackage -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.CreateConnectPackage (creationParameters, connectPackage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creationParameters" Type="Microsoft.Health.Package.ConnectPackageCreationParameters" />
        <Parameter Name="connectPackage" Type="Microsoft.Health.ItemTypes.PasswordProtectedPackage" />
      </Parameters>
      <Docs>
        <param name="creationParameters">
            The parameters to use when creating the package. 
            </param>
        <param name="connectPackage">
            The pending connect package that the user will add to his/her record. 
            This package's
            <see cref="T:Microsoft.Health.HealthRecordItem" />'s <see cref="T:Microsoft.Health.BlobStore" /> must be an encrypted 
            blob of xml that represents a list of HealthRecordItems. This xml blob
            must be a sequence of <thing /> elements, each wrapping the XML representation of a 
            single HealthRecordItem. Each <thing /> element may be generated by calling 
            <see cref="M:Microsoft.Health.HealthRecordItem.GetItemXml" />.
            </param>
        <summary>
            Asks HealthVault to create a pending package for the application specified
            by the connection with the specified user specific parameters and the pre-allocated
            identity code.
            </summary>
        <returns>
            A token that the application must give to the patient to use when validating the
            connection request.
            </returns>
        <remarks>
            The password protected package supports 2 encryption algorithms, AES256 (recommended)
            and TripleDES. 
            <br /><br />
            For AES256, the supported key size is 256 bits, the blocksize is 256 bits, the IV 
            length is 32 bytes.
            <br /><br />
            For TripleDES, the supported key size is 192 bits, the blocksize is 64 bits, the IV 
            length is 8 bytes.
            <br /><br />
            The encryption key should be derived using the answer, the salt, and the number of hash 
            iterations. The decryption will generate this key via the 
            <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class, hence, encryption should use a similar or 
            identical process. To ensure case-insensitivity, the answer should be converted to its
            lower cased form using <see cref="M:System.String.ToLowerInvariant" /> (culturally-agnostic) 
            prior to generating the derived key.
            <br /><br />
            The algorithm used has the following parameters:
            <ul><li>Mode = CipherMode.CBC</li><li>Padding = PaddingMode.ISO10126</li></ul><br /><br />
            The salt supplied is used as the salt to the derived key as well as the key to the 
            supplied HMAC. The salt should be at least 8 bytes long.
            <br /><br />
            It is recommended that the number of hash iterations be at least 10000.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateConnectPackage">
      <MemberSignature Language="C#" Value="public static string CreateConnectPackage (Microsoft.Health.Package.ConnectPackageCreationParameters creationParameters, Microsoft.Health.ItemTypes.PasswordProtectedPackage connectPackage, System.Collections.Generic.IEnumerable&lt;Uri&gt; packageContentsBlobUrls);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateConnectPackage(class Microsoft.Health.Package.ConnectPackageCreationParameters creationParameters, class Microsoft.Health.ItemTypes.PasswordProtectedPackage connectPackage, class System.Collections.Generic.IEnumerable`1&lt;class System.Uri&gt; packageContentsBlobUrls) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.CreateConnectPackage(Microsoft.Health.Package.ConnectPackageCreationParameters,Microsoft.Health.ItemTypes.PasswordProtectedPackage,System.Collections.Generic.IEnumerable{System.Uri})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateConnectPackage (creationParameters As ConnectPackageCreationParameters, connectPackage As PasswordProtectedPackage, packageContentsBlobUrls As IEnumerable(Of Uri)) As String" />
      <MemberSignature Language="F#" Value="static member CreateConnectPackage : Microsoft.Health.Package.ConnectPackageCreationParameters * Microsoft.Health.ItemTypes.PasswordProtectedPackage * seq&lt;Uri&gt; -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.CreateConnectPackage (creationParameters, connectPackage, packageContentsBlobUrls)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="creationParameters" Type="Microsoft.Health.Package.ConnectPackageCreationParameters" />
        <Parameter Name="connectPackage" Type="Microsoft.Health.ItemTypes.PasswordProtectedPackage" />
        <Parameter Name="packageContentsBlobUrls" Type="System.Collections.Generic.IEnumerable&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="creationParameters">
            The parameters to use when creating the package. 
            </param>
        <param name="connectPackage">
            The pending connect package that the user will add to his/her record. 
            This package's
            <see cref="T:Microsoft.Health.HealthRecordItem" />'s <see cref="T:Microsoft.Health.BlobStore" /> must be an encrypted 
            blob of xml that represents a list of HealthRecordItems. This xml blob
            must be a sequence of <thing /> elements, each wrapping the XML representation of a 
            single HealthRecordItem. Each <thing /> element may be generated by calling 
            <see cref="M:Microsoft.Health.HealthRecordItem.GetItemXml" />.
            </param>
        <param name="packageContentsBlobUrls">
            URLs of the streamed blobs of the package contents.
            </param>
        <summary>
            Asks HealthVault to create a pending package for the application specified
            by the connection with the specified user specific parameters and the pre-allocated
            identity code.
            </summary>
        <returns>
            A token that the application must give to the patient to use when validating the
            connection request.
            </returns>
        <remarks>
            The password protected package supports 2 encryption algorithms, AES256 (recommended)
            and TripleDES. 
            <br /><br />
            For AES256, the supported key size is 256 bits, the blocksize is 256 bits, the IV 
            length is 32 bytes.
            <br /><br />
            For TripleDES, the supported key size is 192 bits, the blocksize is 64 bits, the IV 
            length is 8 bytes.
            <br /><br />
            The encryption key should be derived using the answer, the salt, and the number of hash 
            iterations. The decryption will generate this key via the 
            <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class, hence, encryption should use a similar or 
            identical process. To ensure case-insensitivity, the answer should be converted to its
            lower cased form using <see cref="M:System.String.ToLowerInvariant" /> (culturally-agnostic) 
            prior to generating the derived key.
            <br /><br />
            The algorithm used has the following parameters:
            <ul><li>Mode = CipherMode.CBC</li><li>Padding = PaddingMode.ISO10126</li></ul><br /><br />
            The salt supplied is used as the salt to the derived key as well as the key to the 
            supplied HMAC. The salt should be at least 8 bytes long.
            <br /><br />
            It is recommended that the number of hash iterations be at least 10000.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePatientConnection">
      <MemberSignature Language="C#" Value="public static string CreatePatientConnection (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string friendlyName, string securityQuestion, string securityAnswer, Uri callbackUrl, string applicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreatePatientConnection(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string friendlyName, string securityQuestion, string securityAnswer, class System.Uri callbackUrl, string applicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.CreatePatientConnection(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String,System.String,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePatientConnection (connection As OfflineWebApplicationConnection, friendlyName As String, securityQuestion As String, securityAnswer As String, callbackUrl As Uri, applicationPatientId As String) As String" />
      <MemberSignature Language="F#" Value="static member CreatePatientConnection : Microsoft.Health.Web.OfflineWebApplicationConnection * string * string * string * Uri * string -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.CreatePatientConnection (connection, friendlyName, securityQuestion, securityAnswer, callbackUrl, applicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityQuestion" Type="System.String" />
        <Parameter Name="securityAnswer" Type="System.String" />
        <Parameter Name="callbackUrl" Type="System.Uri" />
        <Parameter Name="applicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to HealthVault. The application ID in the connection is used
            when making the patient connection.
            </param>
        <param name="friendlyName">
            A friendly name for the patient connection which will be shown to the user when they
            go to HealthVault Shell to validate the connection.
            </param>
        <param name="securityQuestion">
            A question (usually provided by the patient) to which the patient must provide the 
            answer when they go to validate the connection in the HealthVault Shell.
            </param>
        <param name="securityAnswer">
            The answer to the <paramref name="securityQuestion" /> which the patient must use
            when validating the connection in HealthVault Shell. The answer is case-insensitive but
            otherwise must match exactly. In most cases it is recommended that this is a single 
            word to prevent entry problems when validating the connection.
            </param>
        <param name="callbackUrl">
            Not yet implemented. May be null.
            </param>
        <param name="applicationPatientId">
            The application specific identifier for the user. This identifier is used to uniquely
            identify the user in the application data storage whereas the HealthVault person ID is
            used to identify the person in HealthVault.
            </param>
        <summary>
            Asks HealthVault to create a pending patient connection for the application specified
            by the connection with the specified user specific parameters.
            </summary>
        <returns>
            A token that the application must give to the patient to use when validating the
            connection request.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="friendlyName" />, <paramref name="securityQuestion" />,
            <paramref name="securityAnswer" />, or <paramref name="applicationPatientId" /> is
            <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeletePendingConnectionPackageForIdentityCode">
      <MemberSignature Language="C#" Value="public static void DeletePendingConnectionPackageForIdentityCode (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string identityCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeletePendingConnectionPackageForIdentityCode(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string identityCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.DeletePendingConnectionPackageForIdentityCode(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeletePendingConnectionPackageForIdentityCode (connection As OfflineWebApplicationConnection, identityCode As String)" />
      <MemberSignature Language="F#" Value="static member DeletePendingConnectionPackageForIdentityCode : Microsoft.Health.Web.OfflineWebApplicationConnection * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.DeletePendingConnectionPackageForIdentityCode (connection, identityCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="identityCode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to HealthVault to use for this operation. 
            </param>
        <param name="identityCode">
            The unique token that identifies the package.
            </param>
        <summary>
            Deletes a single package that has been created by the calling application but has not been 
            accepted by the user.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="identityCode" /> is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeletePendingConnectPackages">
      <MemberSignature Language="C#" Value="public static void DeletePendingConnectPackages (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string applicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeletePendingConnectPackages(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string applicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.DeletePendingConnectPackages(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeletePendingConnectPackages (connection As OfflineWebApplicationConnection, applicationPatientId As String)" />
      <MemberSignature Language="F#" Value="static member DeletePendingConnectPackages : Microsoft.Health.Web.OfflineWebApplicationConnection * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.DeletePendingConnectPackages (connection, applicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="applicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to HealthVault to use for this operation. 
            </param>
        <param name="applicationPatientId">
            The application specific user ID that was used to create the connection 
            request.
            </param>
        <summary>
            Deletes all packages that have been created by the calling application 
            for the applicationPatientId and have not been accepted by the user.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="applicationPatientId" /> is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DeletePendingPatientConnection">
      <MemberSignature Language="C#" Value="public static void DeletePendingPatientConnection (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string applicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeletePendingPatientConnection(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string applicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.DeletePendingPatientConnection(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeletePendingPatientConnection (connection As OfflineWebApplicationConnection, applicationPatientId As String)" />
      <MemberSignature Language="F#" Value="static member DeletePendingPatientConnection : Microsoft.Health.Web.OfflineWebApplicationConnection * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.DeletePendingPatientConnection (connection, applicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="applicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to HealthVault to use for this operation. 
            </param>
        <param name="applicationPatientId">
            The application's identifier for the user which was used to create the connection 
            request.
            </param>
        <summary>
            Deletes a request for a connection that has been made by the calling application but
            has not been validated by the user.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="applicationPatientId" /> is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DisassociateAlternateId">
      <MemberSignature Language="C#" Value="public static void DisassociateAlternateId (Microsoft.Health.ApplicationConnection connection, string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisassociateAlternateId(class Microsoft.Health.ApplicationConnection connection, string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisassociateAlternateId (connection As ApplicationConnection, alternateId As String)" />
      <MemberSignature Language="F#" Value="static member DisassociateAlternateId : Microsoft.Health.ApplicationConnection * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.DisassociateAlternateId (connection, alternateId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="alternateId">
            The alternate id.
            </param>
        <summary>
            Disassociates an alternate id with a record.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The connection, or alternateId parameters are null
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="DisassociateAlternateId">
      <MemberSignature Language="C#" Value="public static void DisassociateAlternateId (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisassociateAlternateId(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.DisassociateAlternateId(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisassociateAlternateId (connection As ApplicationConnection, accessor As HealthRecordAccessor, alternateId As String)" />
      <MemberSignature Language="F#" Value="static member DisassociateAlternateId : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.DisassociateAlternateId (connection, accessor, alternateId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="alternateId">
            The alternate id.
            </param>
        <summary>
            Disassociates an alternate id with a record.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The connection, accessor, or alternateId parameters are null
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAlternateIds">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;string&gt; GetAlternateIds (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;string&gt; GetAlternateIds(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetAlternateIds(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAlternateIds (connection As ApplicationConnection, accessor As HealthRecordAccessor) As Collection(Of String)" />
      <MemberSignature Language="F#" Value="static member GetAlternateIds : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor -&gt; System.Collections.ObjectModel.Collection&lt;string&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetAlternateIds (connection, accessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <summary>
            Gets the list of alternate IDs that are associated with a record.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ApplicationInfo GetApplicationInfo (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ApplicationInfo GetApplicationInfo(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetApplicationInfo(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationInfo (connection As HealthServiceConnection) As ApplicationInfo" />
      <MemberSignature Language="F#" Value="static member GetApplicationInfo : Microsoft.Health.HealthServiceConnection -&gt; Microsoft.Health.ApplicationInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetApplicationInfo connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application-level. </param>
        <summary>
             Gets the application configuration information for the calling application.
             </summary>
        <returns>
             An ApplicationInfo object for the calling application.
             </returns>
        <remarks>
             This method always calls the HealthVault service to get the latest 
             information. It returns installation configuration about the calling 
             application.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ApplicationInfo GetApplicationInfo (Microsoft.Health.HealthServiceConnection connection, bool allLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ApplicationInfo GetApplicationInfo(class Microsoft.Health.HealthServiceConnection connection, bool allLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetApplicationInfo(Microsoft.Health.HealthServiceConnection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationInfo (connection As HealthServiceConnection, allLanguages As Boolean) As ApplicationInfo" />
      <MemberSignature Language="F#" Value="static member GetApplicationInfo : Microsoft.Health.HealthServiceConnection * bool -&gt; Microsoft.Health.ApplicationInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetApplicationInfo (connection, allLanguages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="allLanguages" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="allLanguages">
             A boolean value indicating whether the localized values all languages should be 
             returned, just one language. This affects all properties which can have multiple 
             localized values, including <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificNames" />, 
             <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificDescriptions" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.CultureSpecificAuthorizationReasons" />, 
             <see cref="P:Microsoft.Health.ApplicationInfo.LargeLogo" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.SmallLogo" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.PrivacyStatement" />,
             <see cref="P:Microsoft.Health.ApplicationInfo.TermsOfUse" />,
             and <see cref="P:Microsoft.Health.ApplicationInfo.DtcSuccessMessage" /></param>
        <summary>
             Gets the application configuration information for the calling application.
             </summary>
        <returns>
             An ApplicationInfo object for the calling application.
             </returns>
        <remarks>
             This method always calls the HealthVault service to get the latest 
             information. It returns installation configuration about the calling 
             application.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSettings">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ApplicationSettings GetApplicationSettings (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ApplicationSettings GetApplicationSettings(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetApplicationSettings(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationSettings (connection As HealthServiceConnection) As ApplicationSettings" />
      <MemberSignature Language="F#" Value="static member GetApplicationSettings : Microsoft.Health.HealthServiceConnection -&gt; Microsoft.Health.ApplicationSettings" Usage="Microsoft.Health.HealthVaultPlatform.GetApplicationSettings connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationSettings</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <summary>
             Gets the application settings for the current application and
             person.
             </summary>
        <returns>
             The complete set application settings including the XML settings, selected record ID, etc.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationSettingsAsXml">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.IXPathNavigable GetApplicationSettingsAsXml (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.IXPathNavigable GetApplicationSettingsAsXml(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetApplicationSettingsAsXml(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetApplicationSettingsAsXml (connection As HealthServiceConnection) As IXPathNavigable" />
      <MemberSignature Language="F#" Value="static member GetApplicationSettingsAsXml : Microsoft.Health.HealthServiceConnection -&gt; System.Xml.XPath.IXPathNavigable" Usage="Microsoft.Health.HealthVaultPlatform.GetApplicationSettingsAsXml connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.IXPathNavigable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <summary>
             Gets the application settings for the current application and
             person.
             </summary>
        <returns>
             The application settings XML.
             </returns>
        <remarks>
             This might be <b>null</b> if no application settings have been 
             stored for the application or user.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizedPeople">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople (Microsoft.Health.ApplicationConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople(class Microsoft.Health.ApplicationConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthorizedPeople (connection As ApplicationConnection) As IEnumerable(Of PersonInfo)" />
      <MemberSignature Language="F#" Value="static member GetAuthorizedPeople : Microsoft.Health.ApplicationConnection -&gt; seq&lt;Microsoft.Health.PersonInfo&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetAuthorizedPeople connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application-level. </param>
        <summary>
             Gets information about people authorized for an application.
             </summary>
        <returns>
             An IEnumerable iterator of <see cref="T:Microsoft.Health.PersonInfo" /> objects representing 
             people authorized for the application.
             </returns>
        <remarks>
             The returned IEnumerable iterator will access the HealthVault service 
             across the network. The default <see cref="T:Microsoft.Health.GetAuthorizedPeopleSettings" /> 
             values are used.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizedPeople">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.GetAuthorizedPeopleSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.PersonInfo&gt; GetAuthorizedPeople(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.GetAuthorizedPeopleSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetAuthorizedPeople(Microsoft.Health.ApplicationConnection,Microsoft.Health.GetAuthorizedPeopleSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthorizedPeople (connection As ApplicationConnection, settings As GetAuthorizedPeopleSettings) As IEnumerable(Of PersonInfo)" />
      <MemberSignature Language="F#" Value="static member GetAuthorizedPeople : Microsoft.Health.ApplicationConnection * Microsoft.Health.GetAuthorizedPeopleSettings -&gt; seq&lt;Microsoft.Health.PersonInfo&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetAuthorizedPeople (connection, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.PersonInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="settings" Type="Microsoft.Health.GetAuthorizedPeopleSettings" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application-level. </param>
        <param name="settings">
             The <see cref="T:Microsoft.Health.GetAuthorizedPeopleSettings" /> object used to configure the 
             IEnumerable iterator returned by this method.
             </param>
        <summary>
             Gets information about people authorized for an application.
             </summary>
        <returns>
             An IEnumerable iterator of <see cref="T:Microsoft.Health.PersonInfo" /> objects representing 
             people authorized for the application.
             </returns>
        <remarks>
             The returned IEnumerable iterator will access the HealthVault service 
             across the network. See <see cref="T:Microsoft.Health.GetAuthorizedPeopleSettings" /> for applicable 
             settings.
             </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error. The retrieval can be retried from the 
             current position by calling this method again and using the last successfully 
             retrieved person Id for <see cref="P:Microsoft.Health.GetAuthorizedPeopleSettings.StartingPersonId" />.        
             </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="settings" /> is null.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="GetAuthorizedRecords">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordInfo&gt; GetAuthorizedRecords (Microsoft.Health.ApplicationConnection connection, System.Collections.Generic.IList&lt;Guid&gt; recordIds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordInfo&gt; GetAuthorizedRecords(class Microsoft.Health.ApplicationConnection connection, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; recordIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetAuthorizedRecords(Microsoft.Health.ApplicationConnection,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthorizedRecords (connection As ApplicationConnection, recordIds As IList(Of Guid)) As Collection(Of HealthRecordInfo)" />
      <MemberSignature Language="F#" Value="static member GetAuthorizedRecords : Microsoft.Health.ApplicationConnection * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordInfo&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetAuthorizedRecords (connection, recordIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="recordIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <param name="recordIds">
             The unique identifiers for the records to retrieve.
             </param>
        <summary>
             Gets the <see cref="T:Microsoft.Health.HealthRecordInfo" /> for the records identified
             by the specified <paramref name="recordIds" />.
             </summary>
        <returns>
             A collection of the records matching the specified record 
             identifiers and authorized for the authenticated person.
             </returns>
        <remarks>
             This method is useful in cases where the application is storing
             record identifiers and needs access to the functionality provided
             by the object model.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildApplication">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ApplicationInfo GetChildApplication (Microsoft.Health.Web.OfflineWebApplicationConnection connection, Guid childApplicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ApplicationInfo GetChildApplication(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, valuetype System.Guid childApplicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetChildApplication(Microsoft.Health.Web.OfflineWebApplicationConnection,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildApplication (connection As OfflineWebApplicationConnection, childApplicationId As Guid) As ApplicationInfo" />
      <MemberSignature Language="F#" Value="static member GetChildApplication : Microsoft.Health.Web.OfflineWebApplicationConnection * Guid -&gt; Microsoft.Health.ApplicationInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetChildApplication (connection, childApplicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="childApplicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to get the application information.
            </param>
        <param name="childApplicationId">
            The unique application identifier for the child application to get the configuration
            information for.
            </param>
        <summary>
            Gets the configuration information for the specified child application ID.
            </summary>
        <returns>
            Configuration information for the specified child application.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="childApplicationId" /> is <see cref="F:System.Guid.Empty" />.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceAccessDeniedException">
            If the application specified in the <paramref name="connection" /> is not a master
            application, or if <paramref name="childApplicationId" /> does not identify a child
            application of the calling application.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If there is an error when the HealthVault service is called.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetHealthRecordItemTypeDefinition">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;Guid,Microsoft.Health.HealthRecordItemTypeDefinition&gt; GetHealthRecordItemTypeDefinition (System.Collections.Generic.IList&lt;Guid&gt; typeIds, Microsoft.Health.HealthRecordItemTypeSections sections, System.Collections.Generic.IList&lt;string&gt; imageTypes, Nullable&lt;DateTime&gt; lastClientRefreshDate, Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class Microsoft.Health.HealthRecordItemTypeDefinition&gt; GetHealthRecordItemTypeDefinition(class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; typeIds, valuetype Microsoft.Health.HealthRecordItemTypeSections sections, class System.Collections.Generic.IList`1&lt;string&gt; imageTypes, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; lastClientRefreshDate, class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetHealthRecordItemTypeDefinition(System.Collections.Generic.IList{System.Guid},Microsoft.Health.HealthRecordItemTypeSections,System.Collections.Generic.IList{System.String},System.Nullable{System.DateTime},Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHealthRecordItemTypeDefinition (typeIds As IList(Of Guid), sections As HealthRecordItemTypeSections, imageTypes As IList(Of String), lastClientRefreshDate As Nullable(Of DateTime), connection As HealthServiceConnection) As IDictionary(Of Guid, HealthRecordItemTypeDefinition)" />
      <MemberSignature Language="F#" Value="static member GetHealthRecordItemTypeDefinition : System.Collections.Generic.IList&lt;Guid&gt; * Microsoft.Health.HealthRecordItemTypeSections * System.Collections.Generic.IList&lt;string&gt; * Nullable&lt;DateTime&gt; * Microsoft.Health.HealthServiceConnection -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypeDefinition&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetHealthRecordItemTypeDefinition (typeIds, sections, imageTypes, lastClientRefreshDate, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Guid,Microsoft.Health.HealthRecordItemTypeDefinition&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="sections" Type="Microsoft.Health.HealthRecordItemTypeSections" />
        <Parameter Name="imageTypes" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
        <Parameter Name="lastClientRefreshDate" Type="System.Nullable&lt;System.DateTime&gt;" />
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="typeIds">
            A collection of health item type IDs whose details are being requested. Null 
            indicates that all health item types should be returned.
            </param>
        <param name="sections">
            A collection of HealthRecordItemTypeSections enumeration values that indicate the type 
            of details to be returned for the specified health item records(s).
            </param>
        <param name="imageTypes">
            A collection of strings that identify which health item record images should be 
            retrieved.
            
            This requests an image of the specified mime type should be returned. For example, 
            to request a GIF image, "image/gif" should be specified. For icons, "image/vnd.microsoft.icon" 
            should be specified. Note, not all health item records will have all image types and 
            some may not have any images at all.
                           
            If '*' is specified, all image types will be returned.
            </param>
        <param name="lastClientRefreshDate">
            A <see cref="T:System.DateTime" /> instance that specifies the time of the last refresh
            made by the client.
            </param>
        <param name="connection"> 
            A connection to the HealthVault service.
            </param>
        <summary>
            Gets the definitions for one or more health record item type definitions
            supported by HealthVault.
            </summary>
        <returns>
            The type definitions for the specified types, or empty if the
            <paramref name="typeIds" /> parameter does not represent a known unique
            type identifier.
            </returns>
        <remarks>
            This method calls the HealthVault service if the types are not
            already in the client-side cache.
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="typeIds" /> is <b>null</b> and empty, or 
            <paramref name="typeIds" /> is <b>null</b> and member in <paramref name="typeIds" /> is 
            <see cref="F:System.Guid.Empty" />.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingItems">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.HealthRecordItemCollection&gt; GetMatchingItems (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, Microsoft.Health.HealthRecordSearcher searcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.HealthRecordItemCollection&gt; GetMatchingItems(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class Microsoft.Health.HealthRecordSearcher searcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMatchingItems(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,Microsoft.Health.HealthRecordSearcher)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMatchingItems (connection As ApplicationConnection, accessor As HealthRecordAccessor, searcher As HealthRecordSearcher) As ReadOnlyCollection(Of HealthRecordItemCollection)" />
      <MemberSignature Language="F#" Value="static member GetMatchingItems : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * Microsoft.Health.HealthRecordSearcher -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.HealthRecordItemCollection&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetMatchingItems (connection, accessor, searcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.HealthRecordItemCollection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="searcher" Type="Microsoft.Health.HealthRecordSearcher" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="searcher">
            The searcher that defines what items to return. .
            </param>
        <summary>
            Gets the health record items that match the filters as specified by 
            the properties of this class.
            </summary>
        <returns>
            A collection of health record items that match the applied filters.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The response from the server was anything but 
            <see cref="F:Microsoft.Health.HealthServiceStatusCode.Ok" />.
            -or-
            <see cref="P:Microsoft.Health.HealthRecordSearcher.Filters" /> is empty
            or contains invalid filters.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingItemsRaw">
      <MemberSignature Language="C#" Value="public static System.Xml.XPath.XPathNavigator GetMatchingItemsRaw (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, Microsoft.Health.HealthRecordSearcher searcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XPath.XPathNavigator GetMatchingItemsRaw(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class Microsoft.Health.HealthRecordSearcher searcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMatchingItemsRaw(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,Microsoft.Health.HealthRecordSearcher)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMatchingItemsRaw (connection As ApplicationConnection, accessor As HealthRecordAccessor, searcher As HealthRecordSearcher) As XPathNavigator" />
      <MemberSignature Language="F#" Value="static member GetMatchingItemsRaw : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * Microsoft.Health.HealthRecordSearcher -&gt; System.Xml.XPath.XPathNavigator" Usage="Microsoft.Health.HealthVaultPlatform.GetMatchingItemsRaw (connection, accessor, searcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="searcher" Type="Microsoft.Health.HealthRecordSearcher" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="searcher">
            The searcher that defines what items to return.
            </param>
        <summary>
            Gets the health record items that match the filters as specified by 
            the properties of this class.
            </summary>
        <returns>
            An XPathNavigator representing the raw results of the search.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            This method is typically used when the calling application wants to
            handle the raw health record item XML directly instead of using the 
            object model.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatchingItemsReader">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader GetMatchingItemsReader (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, Microsoft.Health.HealthRecordSearcher searcher);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader GetMatchingItemsReader(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class Microsoft.Health.HealthRecordSearcher searcher) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMatchingItemsReader(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,Microsoft.Health.HealthRecordSearcher)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMatchingItemsReader (connection As ApplicationConnection, accessor As HealthRecordAccessor, searcher As HealthRecordSearcher) As XmlReader" />
      <MemberSignature Language="F#" Value="static member GetMatchingItemsReader : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * Microsoft.Health.HealthRecordSearcher -&gt; System.Xml.XmlReader" Usage="Microsoft.Health.HealthVaultPlatform.GetMatchingItemsReader (connection, accessor, searcher)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="searcher" Type="Microsoft.Health.HealthRecordSearcher" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="searcher">
            The searcher that defines what items to return.
            </param>
        <summary>
            Gets the health record items that match the filters as specified by 
            the properties of this class.
            </summary>
        <returns>
            An XmlReader representing the raw results of the search.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            This method is typically used when the calling application wants to
            handle the raw health record item XML directly instead of using the 
            object model.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMeaningfulUseTimelyAccessDocumentReport">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.DocumentReceipt&gt; GetMeaningfulUseTimelyAccessDocumentReport (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.DateRange reportingPeriodFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.MeaningfulUse.DocumentReceipt&gt; GetMeaningfulUseTimelyAccessDocumentReport(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.DateRange reportingPeriodFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseTimelyAccessDocumentReport(Microsoft.Health.HealthServiceConnection,Microsoft.Health.DateRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMeaningfulUseTimelyAccessDocumentReport (connection As HealthServiceConnection, reportingPeriodFilter As DateRange) As IEnumerable(Of DocumentReceipt)" />
      <MemberSignature Language="F#" Value="static member GetMeaningfulUseTimelyAccessDocumentReport : Microsoft.Health.HealthServiceConnection * Microsoft.Health.DateRange -&gt; seq&lt;Microsoft.Health.MeaningfulUse.DocumentReceipt&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseTimelyAccessDocumentReport (connection, reportingPeriodFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.DocumentReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="reportingPeriodFilter" Type="Microsoft.Health.DateRange" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="reportingPeriodFilter">
            The UTC reporting period to be used to retrieve the Timely Access Report.
            </param>
        <summary>
            Retrieves the Meaningful Use Timely Access Report for the application.
            </summary>
        <returns>
            An IEnumerable iterator of <see cref="T:Microsoft.Health.MeaningfulUse.DocumentReceipt" /> objects which contains the
            list of document receipts having an event date (visit or discharge date) within the specified reporting period.
            </returns>
        <remarks>
          <p>
            The Timely Access Report gives applications information to determine if they meet the Meaningful Use Stage 2 measure for timely patient access to information.
            For ambulatory settings, the measure states "More than 50 percent of all unique patients seen by the EP during the EHR reporting period are provided timely
            (available to the patient within 4 business days after the information is available to the EP)
            online access to their health information subject to the EP's discretion to withhold certain information".
            For the inpatient settings, the measure states "More than 50 percent of all patients who are discharged from the
            Inpatient or emergency department (POS 21 or 23) of an eligible hospital or CAH have their information available online
            within 36 hours of discharge". (For more regarding this measure see "View, download, and transmit to a 3rd party"
            in the <a href="http://www.healthit.gov/policy-researchers-implementers/meaningful-use-stage-2">Meaningful Use Stage 2 Reference Grid</a>.)
            </p>
          <p>
            HealthVault returns an entry in the report for each CCDA document received by the data source having an event date
            (which is the visit date for ambulatory settings, and the discharge date for inpatient settings) within the specified
            reporting period filter. Each entry consists of the date the document was made available to the patient in HealthVault, the event date,
            and the patient ID as specified in the CCDA document. The application can use this information to help calculate the percentage value of the measure.
            </p>
          <p>
            Note that HealthVault does not know the full list of patients seen by the provider and does not apply any logic to determine whether patients
            had access to the data within the timeframe specified by the measure. To calculate the percentage for this measure, the application must take into
            account the total number of unique patients seen or discharged within the desired reporting period, and for each patient determine if the data was made
            available to them within the measure's specified timeframe.
            </p>
        </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> or <paramref name="reportingPeriodFilter" /> is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMeaningfulUseTimelyAccessDOPUDocumentReport">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt&gt; GetMeaningfulUseTimelyAccessDOPUDocumentReport (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.DateRange availableDateFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt&gt; GetMeaningfulUseTimelyAccessDOPUDocumentReport(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.DateRange availableDateFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseTimelyAccessDOPUDocumentReport(Microsoft.Health.HealthServiceConnection,Microsoft.Health.DateRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMeaningfulUseTimelyAccessDOPUDocumentReport (connection As HealthServiceConnection, availableDateFilter As DateRange) As IEnumerable(Of DOPUDocumentReceipt)" />
      <MemberSignature Language="F#" Value="static member GetMeaningfulUseTimelyAccessDOPUDocumentReport : Microsoft.Health.HealthServiceConnection * Microsoft.Health.DateRange -&gt; seq&lt;Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseTimelyAccessDOPUDocumentReport (connection, availableDateFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="availableDateFilter" Type="Microsoft.Health.DateRange" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="availableDateFilter">
            The UTC date range used to filter the entries in the Timely Access Report by the date the CCDA document was made available to HealthVault.
            </param>
        <summary>
            Retrieves the Meaningful Use Timely Access Report for applications that use DOPU to transfer CCDA documents to HealthVault.
            </summary>
        <returns>
            An IEnumerable iterator of <see cref="T:Microsoft.Health.MeaningfulUse.DOPUDocumentReceipt" /> objects which contains the list of CCDA document receipts sent to HealthVault using DOPU, filtered by the available date range. 
            </returns>
        <remarks>
          <p>
            The Timely Access Report gives applications information to determine if they meet the Meaningful Use Stage 2 measure for timely patient access to information.
            For ambulatory settings, the measure states "More than 50 percent of all unique patients seen by the EP during the EHR reporting period are provided timely
            (available to the patient within 4 business days after the information is available to the EP) online access to their health information subject to the EP's discretion to withhold certain information".
            For the inpatient settings, the measure states "More than 50 percent of all patients who are discharged from the Inpatient or emergency department (POS 21 or 23) of an eligible hospital
            or CAH have their information available online within 36 hours of discharge". (For more regarding this measure see "View, download, and transmit to a 3rd party"
            in the <a href="http://www.healthit.gov/policy-researchers-implementers/meaningful-use-stage-2">Meaningful Use Stage 2 Reference Grid</a>.)
            </p>
          <p>
            HealthVault returns an entry in the report for each CCDA document received by the data source using DOPU.
            The entries are filtered to those that were made available to HealthVault within the specified available date range filter.
            Each entry consists of the date the document was made available to the patient in HealthVault, and the identifier of the DOPU package that was made available to the patient.
            The application can use this information to help calculate the percentage value of the measure.
            </p>
          <p>
            Note that HealthVault does not know the full list of patients seen by the provider and does not apply any logic to determine whether patients had access to the data within the
            timeframe specified by the measure. To calculate the percentage for this measure, the application must take into account the total number of unique patients seen or
            discharged within the desired reporting period, and for each patient determine if the data was made available to them within the measure's specified timeframe.
            </p>
        </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> or <paramref name="availableDateFilter" />
            is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetMeaningfulUseVDTReport">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.PatientActivity&gt; GetMeaningfulUseVDTReport (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.DateRange reportingPeriodFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Health.MeaningfulUse.PatientActivity&gt; GetMeaningfulUseVDTReport(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.DateRange reportingPeriodFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseVDTReport(Microsoft.Health.HealthServiceConnection,Microsoft.Health.DateRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMeaningfulUseVDTReport (connection As HealthServiceConnection, reportingPeriodFilter As DateRange) As IEnumerable(Of PatientActivity)" />
      <MemberSignature Language="F#" Value="static member GetMeaningfulUseVDTReport : Microsoft.Health.HealthServiceConnection * Microsoft.Health.DateRange -&gt; seq&lt;Microsoft.Health.MeaningfulUse.PatientActivity&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetMeaningfulUseVDTReport (connection, reportingPeriodFilter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Health.MeaningfulUse.PatientActivity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="reportingPeriodFilter" Type="Microsoft.Health.DateRange" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="reportingPeriodFilter">
            The UTC reporting period to be used to retrieve the VDT Report.
            </param>
        <summary>
            Retrieves the Meaningful Use View, Download, and Transmit (VDT) Report for the application.
            </summary>
        <returns>
            An IEnumerable iterator of <see cref="T:Microsoft.Health.MeaningfulUse.PatientActivity" /> objects which contains the list of patients to which the
            data source sent a CCDA document where the event date (visit or discharge date) is within the specified reporting period,
            and additionally, the patient viewed, downloaded or transmitted to a 3rd party, health information in the record.
            </returns>
        <remarks>
          <p>
            The View, Download, and Transmit (VDT) Report gives applications information to determine if they meet the Meaningful Use Stage 2 measure
            for patients taking action on their health information. For ambulatory settings, the measure states
            "More than 5 percent of all unique patients seen by the EP during the EHR reporting period (or their authorized representatives)
            view, download or transmit to a third party their health information". For inpatient settings, the measure states
            "More than 5 percent of all patients who are discharged from the Inpatient or emergency department (POS 21 or 23) of an eligible hospital
            or CAH (or their authorized representative) view, download or transmit to a third party their information during the EHR reporting period."
            (For more regarding this measure see "View, download, and transmit to a 3rd party"
            in the <a href="http://www.healthit.gov/policy-researchers-implementers/meaningful-use-stage-2">Meaningful Use Stage 2 Reference Grid</a>.)
            </p>
          <p>
            HealthVault returns an entry in the report for each patient to which the data source has sent a CCDA document and
            where the patient has viewed, downloaded, or transmitted to a 3rd party health information from the health record.
            The entries in the report are filtered such that only those CCDAs having an event date (which is the visit date for ambulatory settings,
            and the discharge date for inpatient settings) within the specified reporting period filter, will lead to the receiving patient being included in the report.
            The application can use the patient identifiers in the report to help calculate the percentage value of the measure.
            </p>
          <p>
            Note that HealthVault does not know the full list of patients seen by the provider. To calculate the percentage for this measure,
            the application must take into account the total number of unique patients seen or discharged within the desired reporting period.
            </p>
        </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> or <paramref name="reportingPeriodFilter" />
            is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPersonAndRecordForAlternateId">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.PersonInfo GetPersonAndRecordForAlternateId (Microsoft.Health.ApplicationConnection connection, string alternateId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.PersonInfo GetPersonAndRecordForAlternateId(class Microsoft.Health.ApplicationConnection connection, string alternateId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetPersonAndRecordForAlternateId(Microsoft.Health.ApplicationConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPersonAndRecordForAlternateId (connection As ApplicationConnection, alternateId As String) As PersonInfo" />
      <MemberSignature Language="F#" Value="static member GetPersonAndRecordForAlternateId : Microsoft.Health.ApplicationConnection * string -&gt; Microsoft.Health.PersonInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetPersonAndRecordForAlternateId (connection, alternateId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.PersonInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="alternateId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="alternateId">
            The alternate ID.
            </param>
        <summary>
            Gets the person and record IDs that were previosly associated
            with an alternate ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            The connection, accessor, or alternateId parameters are null
            </exception>
        <exception cref="T:System.ArgumentException">
            The alternateId parameter is empty, all whitespace, or more than 255 characters in length.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            If the alternate Id is not associated with a person and record id, the ErrorCode property
            will be set to AlternateIdNotFound.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPersonInfo">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.PersonInfo GetPersonInfo (Microsoft.Health.ApplicationConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.PersonInfo GetPersonInfo(class Microsoft.Health.ApplicationConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetPersonInfo(Microsoft.Health.ApplicationConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPersonInfo (connection As ApplicationConnection) As PersonInfo" />
      <MemberSignature Language="F#" Value="static member GetPersonInfo : Microsoft.Health.ApplicationConnection -&gt; Microsoft.Health.PersonInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetPersonInfo connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.PersonInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
            must be authenticated. </param>
        <summary>
            Gets the information about the person specified.
            </summary>
        <returns>
            Information about the person's HealthVault account.
            </returns>
        <remarks>
            This method always calls the HealthVault service to get the latest 
            information. It is recommended that the calling application cache 
            the return value and only call this method again if it needs to 
            refresh the cache.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetServiceDefinition(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceDefinition (connection As HealthServiceConnection) As ServiceInfo" />
      <MemberSignature Language="F#" Value="static member GetServiceDefinition : Microsoft.Health.HealthServiceConnection -&gt; Microsoft.Health.ServiceInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetServiceDefinition connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. </param>
        <summary>
            Gets information about the HealthVault service.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains the service version, SDK
            assemblies versions and URLs, method information, and so on.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service. This 
            includes:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br /></remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.ServiceInfoSections responseSections);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype Microsoft.Health.ServiceInfoSections responseSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceDefinition (connection As HealthServiceConnection, responseSections As ServiceInfoSections) As ServiceInfo" />
      <MemberSignature Language="F#" Value="static member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections -&gt; Microsoft.Health.ServiceInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetServiceDefinition (connection, responseSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="responseSections" Type="Microsoft.Health.ServiceInfoSections" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="responseSections">
            The categories of information to be populated in the <see cref="T:Microsoft.Health.ServiceInfo" />
            instance, represented as the result of XOR'ing the desired categories.
            </param>
        <summary>
            Gets information about the HealthVault service corresponding to the specified
            categories.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains some or all of the service version,
            SDK assemblies versions and URLs, method information, and so on, depending on which
            information categories were specified.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service. Depending on the specified
            <paramref name="responseSections" />, this will include some or all of:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br />
            
            Retrieving only the sections you need will give a faster response time than
            downloading the full response.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, DateTime lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype System.DateTime lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceDefinition (connection As HealthServiceConnection, lastUpdatedTime As DateTime) As ServiceInfo" />
      <MemberSignature Language="F#" Value="static member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * DateTime -&gt; Microsoft.Health.ServiceInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetServiceDefinition (connection, lastUpdatedTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="lastUpdatedTime">
            The time of the last update to an existing cached copy of <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <summary>
            Gets information about the HealthVault service only if it has been updated since
            the specified update time.
            </summary>
        <returns>
            If there were updates to the service information since the specified <paramref name="lastUpdatedTime" />,
            a <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains the service version, SDK
            assemblies versions and URLs, method information, and so on.  Otherwise, if there were no updates,
            returns <b>null</b>.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service, if there were updates
            since the specified <paramref name="lastUpdatedTime" />.  If there were no updates
            the method returns <b>null</b>.
            This includes:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br /></remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetServiceDefinition">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.ServiceInfo GetServiceDefinition (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.ServiceInfoSections responseSections, DateTime lastUpdatedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.ServiceInfo GetServiceDefinition(class Microsoft.Health.HealthServiceConnection connection, valuetype Microsoft.Health.ServiceInfoSections responseSections, valuetype System.DateTime lastUpdatedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetServiceDefinition(Microsoft.Health.HealthServiceConnection,Microsoft.Health.ServiceInfoSections,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetServiceDefinition (connection As HealthServiceConnection, responseSections As ServiceInfoSections, lastUpdatedTime As DateTime) As ServiceInfo" />
      <MemberSignature Language="F#" Value="static member GetServiceDefinition : Microsoft.Health.HealthServiceConnection * Microsoft.Health.ServiceInfoSections * DateTime -&gt; Microsoft.Health.ServiceInfo" Usage="Microsoft.Health.HealthVaultPlatform.GetServiceDefinition (connection, responseSections, lastUpdatedTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="responseSections" Type="Microsoft.Health.ServiceInfoSections" />
        <Parameter Name="lastUpdatedTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation.</param>
        <param name="responseSections">
            The categories of information to be populated in the <see cref="T:Microsoft.Health.ServiceInfo" />
            instance, represented as the result of XOR'ing the desired categories.
            </param>
        <param name="lastUpdatedTime">
            The time of the last update to an existing cached copy of <see cref="T:Microsoft.Health.ServiceInfo" />.
            </param>
        <summary>
            Gets information about the HealthVault service corresponding to the specified
            categories if the requested information has been updated since the specified
            update time.
            </summary>
        <returns>
            If there were updates to the service information since the specified <paramref name="lastUpdatedTime" />,
            a <see cref="T:Microsoft.Health.ServiceInfo" /> instance that contains some or all of the service version,
            SDK  assemblies versions and URLs, method information, and so on, depending on which
            information categories were specified.  Otherwise, if there were no updates, returns
            <b>null</b>.
            </returns>
        <remarks>
            Gets the latest information about the HealthVault service, if there were updates
            since the specified <paramref name="lastUpdatedTime" />.  If there were no updates
            the method returns <b>null</b>.
            Depending on the specified
            <paramref name="responseSections" />, this will include some or all of:<br />
            - The version of the service.<br />
            - The SDK assembly URLs.<br />
            - The SDK assembly versions.<br />
            - The SDK documentation URL.<br />
            - The URL to the HealthVault Shell.<br />
            - The schema definition for the HealthVault method's request and 
              response.<br />
            - The common schema definitions for types that the HealthVault methods
              use.<br />
            - Information about all available HealthVault instances.<br />
            
            Retrieving only the sections you need will give a faster response time than
            downloading the full response.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.UriFormatException">
            One or more URL strings returned by HealthVault is invalid.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTransformedItems">
      <MemberSignature Language="C#" Value="public static string GetTransformedItems (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, Microsoft.Health.HealthRecordSearcher searcher, string transform);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTransformedItems(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class Microsoft.Health.HealthRecordSearcher searcher, string transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetTransformedItems(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,Microsoft.Health.HealthRecordSearcher,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTransformedItems (connection As ApplicationConnection, accessor As HealthRecordAccessor, searcher As HealthRecordSearcher, transform As String) As String" />
      <MemberSignature Language="F#" Value="static member GetTransformedItems : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * Microsoft.Health.HealthRecordSearcher * string -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.GetTransformedItems (connection, accessor, searcher, transform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="searcher" Type="Microsoft.Health.HealthRecordSearcher" />
        <Parameter Name="transform" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="searcher">
            The searcher that defines what items to return.
            </param>
        <param name="transform">
            A URL to a transform to run on the resulting XML. This can be
            a fully-qualified URL or the name of one of the standard XSLs
            provided by the HealthVault system.
            </param>
        <summary>
            Gets the health record items specified by the 
            <see cref="T:Microsoft.Health.HealthRecordSearcher" /> and runs them through the specified 
            transform.
            </summary>
        <returns>
            The string resulting from performing the specified transform on
            the XML representation of the items.
            </returns>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            Any call to HealthVault may specify a transform to be run on the
            response XML. The transform can be specified as a XSL fragment or
            a well-known transform tag provided by the HealthVault service. If a
            XSL fragment is specified, it gets compiled and cached on the server.
            <br /><br />
            A final-xsl is useful when you want to convert the result from XML to
            HTML so that you can display the result directly in a web page.
            You may also use it to generate other data formats like CCR, CCD, CSV,
            RSS, etc.
            <br /><br />
            Transform fragments cannot contain embedded script. The following set
            of parameters are passed to all final-xsl transforms:<br /><ul><li>currentDateTimeUtc - the date and time just before the transform 
                started executing</li><li>requestingApplicationName - the name of the application that
                made the request to HealthVault.</li><li>countryCode - the ISO 3166 country code from the request.</li><li>languageCode - the ISO 639-1 language code from the request.</li><li>personName - the name of the person making the request.</li><li>recordName - if the request identified a HealthVault record to 
                be used, this parameter contains the name of that record.</li></ul></remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:Microsoft.Health.HealthRecordView.Sections" /> does not
            contain the XML section in the view.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is a failure retrieving the items.
            -or-
            No filters have been specified.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedRecordInfoForApplication">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordUpdateInfo&gt; GetUpdatedRecordInfoForApplication (Microsoft.Health.HealthServiceConnection connection, Nullable&lt;DateTime&gt; updatedDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordUpdateInfo&gt; GetUpdatedRecordInfoForApplication(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; updatedDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetUpdatedRecordInfoForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUpdatedRecordInfoForApplication (connection As HealthServiceConnection, updatedDate As Nullable(Of DateTime)) As IList(Of HealthRecordUpdateInfo)" />
      <MemberSignature Language="F#" Value="static member GetUpdatedRecordInfoForApplication : Microsoft.Health.HealthServiceConnection * Nullable&lt;DateTime&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordUpdateInfo&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetUpdatedRecordInfoForApplication (connection, updatedDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordUpdateInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="updatedDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="updatedDate">
             Date that is used to filter health record IDs according to whether or not they have
             been updated since the specified date.
             </param>
        <summary>
             Gets a list of <see cref="T:Microsoft.Health.HealthRecordUpdateInfo" /> objects for the current application, 
             that optionally have been updated since a specified date.
             </summary>
        <returns>
             List of <see cref="T:Microsoft.Health.HealthRecordUpdateInfo" /> objects filtered by any specified input parameters.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdatedRecordsForApplication">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Guid&gt; GetUpdatedRecordsForApplication (Microsoft.Health.HealthServiceConnection connection, Nullable&lt;DateTime&gt; updatedDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; GetUpdatedRecordsForApplication(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Nullable`1&lt;valuetype System.DateTime&gt; updatedDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetUpdatedRecordsForApplication(Microsoft.Health.HealthServiceConnection,System.Nullable{System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUpdatedRecordsForApplication (connection As HealthServiceConnection, updatedDate As Nullable(Of DateTime)) As IList(Of Guid)" />
      <MemberSignature Language="F#" Value="static member GetUpdatedRecordsForApplication : Microsoft.Health.HealthServiceConnection * Nullable&lt;DateTime&gt; -&gt; System.Collections.Generic.IList&lt;Guid&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetUpdatedRecordsForApplication (connection, updatedDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Guid&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="updatedDate" Type="System.Nullable&lt;System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <param name="updatedDate">
             Date that is used to filter health record IDs according to whether or not they have
             been updated since the specified date.
             </param>
        <summary>
             Gets a list of health record IDs for the current application, 
             that optionally have been updated since a specified date.
             </summary>
        <returns>
             List of health record IDs filtered by any specified input parameters.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidatedPatientConnections">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Health.PatientConnect.ValidatedPatientConnection&gt; GetValidatedPatientConnections (Microsoft.Health.Web.OfflineWebApplicationConnection connection, DateTime validatedSince);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.PatientConnect.ValidatedPatientConnection&gt; GetValidatedPatientConnections(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, valuetype System.DateTime validatedSince) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetValidatedPatientConnections(Microsoft.Health.Web.OfflineWebApplicationConnection,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidatedPatientConnections (connection As OfflineWebApplicationConnection, validatedSince As DateTime) As Collection(Of ValidatedPatientConnection)" />
      <MemberSignature Language="F#" Value="static member GetValidatedPatientConnections : Microsoft.Health.Web.OfflineWebApplicationConnection * DateTime -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.PatientConnect.ValidatedPatientConnection&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetValidatedPatientConnections (connection, validatedSince)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.PatientConnect.ValidatedPatientConnection&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="validatedSince" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="connection">
            The application's connection to HealthVault.
            </param>
        <param name="validatedSince">
            Connections that have been validated since this date will be returned. The date passed
            should be in UTC time.
            </param>
        <summary>
            Gets the connections for the application that people have accepted since the specified
            date.
            </summary>
        <returns>
            A collection of the connections that people have accepted.
            </returns>
        <remarks>
            Validated connect requests are removed by HealthVault after 90 days. It is advised 
            that applications call <see cref="M:Microsoft.Health.HealthVaultPlatform.GetValidatedPatientConnections(Microsoft.Health.Web.OfflineWebApplicationConnection,System.DateTime)" /> 
            daily or weekly to ensure that all validated connect requests are retrieved.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidGroupMembership">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; applicationIds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applicationIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetValidGroupMembership(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValidGroupMembership (connection As ApplicationConnection, accessor As HealthRecordAccessor, applicationIds As IList(Of Guid)) As Collection(Of HealthRecordItem)" />
      <MemberSignature Language="F#" Value="static member GetValidGroupMembership : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetValidGroupMembership (connection, accessor, applicationIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="applicationIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="applicationIds">
            A collection of unique application identifiers for which to 
            search for group memberships.  For a null or empty application identifier 
            list, return all valid group memberships for the record.  Otherwise, 
            return only those group memberships last updated by one of the 
            supplied application identifiers.
            </param>
        <summary>
            Gets valid group memberships for a record.
            </summary>
        <returns>
            A List of HealthRecordItems representing the valid group memberships.
            </returns>
        <remarks>
            Group membership thing types allow an application to signify that the
            record belongs to an application defined group.  A record in the group may be 
            eligible for special programs offered by other applications, for example.  
            Applications then need a away to query for valid group memberships.
            <br />
            Valid group memberships are those memberships which are not expired, and whose
            last updating application is authorized by the last updating person to 
            read and delete the membership.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs while contacting the HealthVault service.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVocabulary">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.Vocabulary GetVocabulary (Microsoft.Health.HealthServiceConnection connection, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.Vocabulary GetVocabulary(class Microsoft.Health.HealthServiceConnection connection, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetVocabulary(Microsoft.Health.HealthServiceConnection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVocabulary (connection As HealthServiceConnection, name As String) As Vocabulary" />
      <MemberSignature Language="F#" Value="static member GetVocabulary : Microsoft.Health.HealthServiceConnection * string -&gt; Microsoft.Health.Vocabulary" Usage="Microsoft.Health.HealthVaultPlatform.GetVocabulary (connection, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.Vocabulary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="name">
            The name of the vocabulary requested.
            </param>
        <summary>
            Retrieves a list of vocabulary items for the specified vocabulary.  
            </summary>
        <returns>
            The requested vocabulary and its items.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="name" /> parameter <b>null</b> or an empty 
            string.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            <br></br>
            -Or- 
            <br></br>
            One of the requested vocabularies is not found on the server.
            <br></br>
            -Or- 
            <br></br>
            -Or- 
            <br></br>
            There is an error loading the vocabulary.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVocabulary">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.Vocabulary GetVocabulary (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.VocabularyKey vocabularyKey, bool cultureIsFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.Vocabulary GetVocabulary(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.VocabularyKey vocabularyKey, bool cultureIsFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetVocabulary(Microsoft.Health.HealthServiceConnection,Microsoft.Health.VocabularyKey,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetVocabulary : Microsoft.Health.HealthServiceConnection * Microsoft.Health.VocabularyKey * bool -&gt; Microsoft.Health.Vocabulary" Usage="Microsoft.Health.HealthVaultPlatform.GetVocabulary (connection, vocabularyKey, cultureIsFixed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.Vocabulary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="vocabularyKey" Type="Microsoft.Health.VocabularyKey" />
        <Parameter Name="cultureIsFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="vocabularyKey">
            A key identifying the vocabulary requested.
            </param>
        <param name="cultureIsFixed">
            HealthVault looks for the vocabulary items for the culture info
            specified using <see cref="P:Microsoft.Health.HealthServiceConnection.Culture" />.
            If <paramref name="cultureIsFixed" /> is set to <b>false</b> and if 
            items are not found for the specified culture, items for the 
            default fallback culture are returned. If 
            <paramref name="cultureIsFixed" /> is set to <b>true</b>, 
            fallback will not occur, and if items are not found for the 
            specified culture, empty strings are returned.
            </param>
        <summary>
            Retrieves a list of vocabulary items for the specified vocabulary
            and culture.
            </summary>
        <returns>
            The specified vocabulary and its items, or empty strings.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="vocabularyKey" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            <br></br>
            -Or- 
            <br></br>
            The requested vocabulary is not found on the server.
            <br></br>
            -Or- 
            <br></br>
            The requested vocabulary does not contain representations 
            for its items for the specified culture when 
            <paramref name="cultureIsFixed" /> is <b>true</b>.
            <br></br>
            -Or- 
            <br></br>
            There is an error loading the vocabulary.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVocabulary">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.Vocabulary&gt; GetVocabulary (Microsoft.Health.HealthServiceConnection connection, System.Collections.Generic.IList&lt;Microsoft.Health.VocabularyKey&gt; vocabularyKeys, bool cultureIsFixed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.Vocabulary&gt; GetVocabulary(class Microsoft.Health.HealthServiceConnection connection, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.VocabularyKey&gt; vocabularyKeys, bool cultureIsFixed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetVocabulary(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.VocabularyKey},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVocabulary (connection As HealthServiceConnection, vocabularyKeys As IList(Of VocabularyKey), cultureIsFixed As Boolean) As ReadOnlyCollection(Of Vocabulary)" />
      <MemberSignature Language="F#" Value="static member GetVocabulary : Microsoft.Health.HealthServiceConnection * System.Collections.Generic.IList&lt;Microsoft.Health.VocabularyKey&gt; * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.Vocabulary&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetVocabulary (connection, vocabularyKeys, cultureIsFixed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.Vocabulary&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="vocabularyKeys" Type="System.Collections.Generic.IList&lt;Microsoft.Health.VocabularyKey&gt;" />
        <Parameter Name="cultureIsFixed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="vocabularyKeys">
            A list of keys identifying the requested vocabularies.
            </param>
        <param name="cultureIsFixed">
            HealthVault looks for the vocabulary items for the culture info
            specified using <see cref="P:Microsoft.Health.HealthServiceConnection.Culture" />.
            If <paramref name="cultureIsFixed" /> is set to <b>false</b> and if 
            items are not found for the specified culture, items for the 
            default fallback culture are returned. If 
            <paramref name="cultureIsFixed" /> is set to <b>true</b>, 
            fallback will not occur, and if items are not found for the 
            specified culture, empty strings are returned.
            </param>
        <summary>
            Retrieves lists of vocabulary items for the specified 
            vocabularies and culture.
            </summary>
        <returns>
            The specified vocabularies and their items, or empty strings.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="vocabularyKeys" /> list is empty.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            The <paramref name="vocabularyKeys" /> list is <b>null</b> 
            or contains a <b>null</b> entry.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            <br></br>
            -Or- 
            <br></br>
            One of the requested vocabularies is not found on the server.
            <br></br>
            -Or- 
            <br></br>
            One of the requested vocabularies does not contain representations 
            for its items for the specified culture when 
            <paramref name="cultureIsFixed" /> is <b>true</b>.
            <br></br>
            -Or- 
            <br></br>
            There is an error loading the vocabulary.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetVocabularyKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt; GetVocabularyKeys (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.VocabularyKey&gt; GetVocabularyKeys(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.GetVocabularyKeys(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVocabularyKeys (connection As HealthServiceConnection) As ReadOnlyCollection(Of VocabularyKey)" />
      <MemberSignature Language="F#" Value="static member GetVocabularyKeys : Microsoft.Health.HealthServiceConnection -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt;" Usage="Microsoft.Health.HealthVaultPlatform.GetVocabularyKeys connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <summary>
            Retrieves a collection of key information for identifying and 
            describing the vocabularies in the system.
            </summary>
        <returns>
            A collection of keys identifying the vocabularies in the system.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewItems">
      <MemberSignature Language="C#" Value="public static void NewItems (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void NewItems(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.NewItems(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub NewItems (connection As ApplicationConnection, accessor As HealthRecordAccessor, items As IList(Of HealthRecordItem))" />
      <MemberSignature Language="F#" Value="static member NewItems : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.NewItems (connection, accessor, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="items">
            The health record items from which to create new instances.
            </param>
        <summary>
            Creates new health record items associated with the record.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error. 
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been created.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            At least one HealthRecordItem in the supplied list was null.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="NewSignupCode">
      <MemberSignature Language="C#" Value="public static string NewSignupCode (Microsoft.Health.HealthServiceConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NewSignupCode(class Microsoft.Health.HealthServiceConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.NewSignupCode(Microsoft.Health.HealthServiceConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewSignupCode (connection As HealthServiceConnection) As String" />
      <MemberSignature Language="F#" Value="static member NewSignupCode : Microsoft.Health.HealthServiceConnection -&gt; string" Usage="Microsoft.Health.HealthVaultPlatform.NewSignupCode connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be application level. </param>
        <summary>
             Generates a new signup code that should be passed to HealthVault Shell in order
             to create a new user account.
             </summary>
        <returns>
             A signup code that can be used to create an account.
             </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissions">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.QueryPermissions(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryPermissions (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As Collection(Of HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="static member QueryPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="Microsoft.Health.HealthVaultPlatform.QueryPermissions (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record.
            </summary>
        <returns>
            A list of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            objects which represent the permissions that the current
            authenticated person has for the HealthRecordItemTypes specified
            in the current health record when using the current application.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If there is an exception during executing the request to HealthVault. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissionsByTypes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;Guid,Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.QueryPermissionsByTypes(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryPermissionsByTypes (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As IDictionary(Of Guid, HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="static member QueryPermissionsByTypes : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="Microsoft.Health.HealthVaultPlatform.QueryPermissionsByTypes (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Guid,Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
             The connection to use to access the data.
             </param>
        <param name="accessor">
             The record to use.
             </param>
        <param name="healthRecordItemTypeIds">
             A collection of unique identifiers to identify the health record  
             item types, for which the permissions are being queried. 
             </param>
        <summary>
             Gets the permissions which the authenticated person 
             has when using the calling application for the specified item types
             in this  record.
             </summary>
        <returns>
             Returns a dictionary of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
             with health record item types as the keys. 
             </returns>
        <remarks> 
             If the list of health record item types is empty, an empty dictionary is 
             returned. If for a health record item type, the person has 
             neither online access nor offline access permissions, 
             <b> null </b> will be returned for that type in the dictionary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             If there is an exception during executing the request to HealthVault. 
             </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryRecordPermissions">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.HealthRecordPermissions QueryRecordPermissions (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.HealthRecordPermissions QueryRecordPermissions(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.QueryRecordPermissions(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function QueryRecordPermissions (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As HealthRecordPermissions" />
      <MemberSignature Language="F#" Value="static member QueryRecordPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; Microsoft.Health.HealthRecordPermissions" Usage="Microsoft.Health.HealthVaultPlatform.QueryRecordPermissions (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordPermissions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record as well as the other permission settings such as IsMeaningfulUseTrackingEnabled.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthRecordPermissions" /> object
            which contains a collection of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> objects and
            other permission settings.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveApplicationAuthorization">
      <MemberSignature Language="C#" Value="public static void RemoveApplicationAuthorization (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveApplicationAuthorization(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.RemoveApplicationAuthorization(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveApplicationAuthorization (connection As ApplicationConnection, accessor As HealthRecordAccessor)" />
      <MemberSignature Language="F#" Value="static member RemoveApplicationAuthorization : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.RemoveApplicationAuthorization (connection, accessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <summary>
            Releases the authorization of the application on the health record.
            </summary>
        <remarks>
            Once the application releases the authorization to the health record, 
            calling any methods of this <see cref="T:Microsoft.Health.HealthRecordAccessor" /> will result 
            in a <see cref="T:Microsoft.Health.HealthServiceAccessDeniedException" />."
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors during the authorization release.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public static void RemoveItems (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt; itemsToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveItems(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItemKey&gt; itemsToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.RemoveItems(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItemKey})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveItems (connection As ApplicationConnection, accessor As HealthRecordAccessor, itemsToRemove As IList(Of HealthRecordItemKey))" />
      <MemberSignature Language="F#" Value="static member RemoveItems : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt; -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.RemoveItems (connection, accessor, itemsToRemove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="itemsToRemove" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItemKey&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="itemsToRemove">
            The unique item identifiers of the items to remove.
            </param>
        <summary>
            Marks the specified health record item as deleted.
            </summary>
        <remarks>
            This method accesses the HealthVault service across the network.
            <br /><br />
            Health record items are never completely deleted. They are marked 
            as deleted and are ignored for most normal operations. Items can 
            be undeleted by contacting customer service.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="itemsToRemove" /> parameter is empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors removed the health record items from the server.
            The exception's Error property will contain the index of the
            item on which the failure occurred in the ErrorInfo property. If any failures occur, 
            no items will have been removed.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchVocabulary">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.VocabularyItemCollection SearchVocabulary (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.VocabularyKey vocabularyKey, string searchValue, Microsoft.Health.VocabularySearchType searchType, Nullable&lt;int&gt; maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.VocabularyItemCollection SearchVocabulary(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.VocabularyKey vocabularyKey, string searchValue, valuetype Microsoft.Health.VocabularySearchType searchType, valuetype System.Nullable`1&lt;int32&gt; maxResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SearchVocabulary(Microsoft.Health.HealthServiceConnection,Microsoft.Health.VocabularyKey,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})" />
      <MemberSignature Language="F#" Value="static member SearchVocabulary : Microsoft.Health.HealthServiceConnection * Microsoft.Health.VocabularyKey * string * Microsoft.Health.VocabularySearchType * Nullable&lt;int&gt; -&gt; Microsoft.Health.VocabularyItemCollection" Usage="Microsoft.Health.HealthVaultPlatform.SearchVocabulary (connection, vocabularyKey, searchValue, searchType, maxResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.VocabularyItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="vocabularyKey" Type="Microsoft.Health.VocabularyKey" />
        <Parameter Name="searchValue" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.Health.VocabularySearchType" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection
            must have application capability. 
            </param>
        <param name="vocabularyKey">
            The <see cref="T:Microsoft.Health.VocabularyKey" /> defining the vocabulary to search. If the 
            family is not specified, the default HealthVault vocabulary family is used. 
            If the version is not specified, the most current version of the vocabulary 
            is used.
            </param>
        <param name="searchValue">
            The search string to use.
            </param>
        <param name="searchType">
            The type of search to perform.
            </param>
        <param name="maxResults">
            The maximum number of results to return. If null, all matching results 
            are returned, up to a maximum number defined by the service config 
            value with key maxResultsPerVocabularyRetrieval.
            </param>
        <summary>
            Searches a specific vocabulary and retrieves the matching vocabulary items.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.VocabularyItemCollection" /> populated with entries matching 
            the search criteria.
            </returns>
        <remarks>
            This method does text search matching of display text and abbreviation text
            for the culture defined by the <see cref="P:Microsoft.Health.HealthServiceConnection.Culture" />. 
            The <paramref name="searchValue" /> is a string of characters in the specified 
            culture. 
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="vocabularyKey" /> is <b>null</b>.
            <br></br>
            -Or-
            <br></br>
            If <paramref name="searchValue" /> is <b>null</b> or empty or greater 
            than <b>255</b> characters.
            <br></br>
            -Or-
            <br></br>
            if <paramref name="searchType" /> is not a known 
            <see cref="T:Microsoft.Health.VocabularySearchType" /> value.        
            <br></br>
            -Or-
            <br></br>
            when <paramref name="maxResults" /> is defined but has a value less than 1.        
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.         
            <br></br>
            -Or-        
            <br></br>
            The requested vocabulary is not found on the server.
            <br></br>
            -Or- 
            The requested search culture is not supported. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchVocabularyKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt; SearchVocabularyKeys (Microsoft.Health.HealthServiceConnection connection, string searchValue, Microsoft.Health.VocabularySearchType searchType, Nullable&lt;int&gt; maxResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class Microsoft.Health.VocabularyKey&gt; SearchVocabularyKeys(class Microsoft.Health.HealthServiceConnection connection, string searchValue, valuetype Microsoft.Health.VocabularySearchType searchType, valuetype System.Nullable`1&lt;int32&gt; maxResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SearchVocabularyKeys(Microsoft.Health.HealthServiceConnection,System.String,Microsoft.Health.VocabularySearchType,System.Nullable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SearchVocabularyKeys (connection As HealthServiceConnection, searchValue As String, searchType As VocabularySearchType, maxResults As Nullable(Of Integer)) As ReadOnlyCollection(Of VocabularyKey)" />
      <MemberSignature Language="F#" Value="static member SearchVocabularyKeys : Microsoft.Health.HealthServiceConnection * string * Microsoft.Health.VocabularySearchType * Nullable&lt;int&gt; -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt;" Usage="Microsoft.Health.HealthVaultPlatform.SearchVocabularyKeys (connection, searchValue, searchType, maxResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;Microsoft.Health.VocabularyKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="searchValue" Type="System.String" />
        <Parameter Name="searchType" Type="Microsoft.Health.VocabularySearchType" />
        <Parameter Name="maxResults" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
             The connection to use for this operation. The connection
             must have application capability. 
             </param>
        <param name="searchValue">
             The search string to use.
             </param>
        <param name="searchType">
             The type of search to perform.
             </param>
        <param name="maxResults">
             The maximum number of results to return. If null, all matching results 
             are returned, up to a maximum number defined by the service config 
             value with key maxResultsPerVocabularyRetrieval.
             </param>
        <summary>
             Searches the keys of vocabularies defined by the HealthVault service.
             </summary>
        <returns>
             A <b>ReadOnlyCollection</b> of <see cref="T:Microsoft.Health.VocabularyKey" /> with entries
             matching the search criteria.
             </returns>
        <remarks>
             This method does a text search of vocabulary names and descriptions.
             </remarks>
        <exception cref="T:System.ArgumentException">
             If <paramref name="searchValue" /> is <b>null</b> or empty or greater 
             than <b>255</b> characters.
             <br></br>
             -Or-
             <br></br>
             if <paramref name="searchType" /> is not a known 
             <see cref="T:Microsoft.Health.VocabularySearchType" /> value.        
             <br></br>
             -Or-
             <br></br>
             when <paramref name="maxResults" /> is defined but has a value less than 1.        
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             There is an error in the server request.        
             </exception>
      </Docs>
    </Member>
    <Member MemberName="SelectInstance">
      <MemberSignature Language="C#" Value="public static Microsoft.Health.HealthServiceInstance SelectInstance (Microsoft.Health.HealthServiceConnection connection, Microsoft.Health.Location preferredLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Health.HealthServiceInstance SelectInstance(class Microsoft.Health.HealthServiceConnection connection, class Microsoft.Health.Location preferredLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SelectInstance(Microsoft.Health.HealthServiceConnection,Microsoft.Health.Location)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SelectInstance (connection As HealthServiceConnection, preferredLocation As Location) As HealthServiceInstance" />
      <MemberSignature Language="F#" Value="static member SelectInstance : Microsoft.Health.HealthServiceConnection * Microsoft.Health.Location -&gt; Microsoft.Health.HealthServiceInstance" Usage="Microsoft.Health.HealthVaultPlatform.SelectInstance (connection, preferredLocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthServiceInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="preferredLocation" Type="Microsoft.Health.Location" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to perform the operation.
            </param>
        <param name="preferredLocation">
            A user's preferred geographical location, used to select the best instance
            in which to create a new HealthVault account. If there is a location associated
            with the credential that will be used to log into the account, that location
            should be used.
            </param>
        <summary>
            Gets the instance where a HealthVault account should be created
            for the specified account location.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthServiceInstance" /> object represents the selected instance,
            or null if no suitable instance exists.
            </returns>
        <remarks>
            If no suitable instance can be found, a null value is returned. This can happen,
            for example, if the account location is not supported by HealthVault.
            
            Currently the returned instance IDs all parse to integers, but that is not
            guaranteed and should not be relied upon.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="preferredLocation" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> parameter is <b>null</b>.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessage">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessage (Microsoft.Health.HealthServiceConnection connection, System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt; mailRecipient, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessage(class Microsoft.Health.HealthServiceConnection connection, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.MailRecipient&gt; mailRecipient, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessage (connection As HealthServiceConnection, mailRecipient As IList(Of MailRecipient), subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessage : Microsoft.Health.HealthServiceConnection * System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt; * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessage (connection, mailRecipient, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="mailRecipient" Type="System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt;" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="mailRecipient">
            The addresses and display names of the people to send the 
            message to.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message to the specified message recipients.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="mailRecipient" /> property is <b>null</b> or empty, 
            or the <paramref name="subject" /> parameter is <b>null</b> or empty, or 
            the <paramref name="textBody" /> and <paramref name="htmlBody" /> 
            parameters are both <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The server returned a failure when making the request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessage">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessage (Microsoft.Health.HealthServiceConnection connection, System.Collections.Generic.IList&lt;Guid&gt; personIds, bool addressMustBeValidated, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessage(class Microsoft.Health.HealthServiceConnection connection, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; personIds, bool addressMustBeValidated, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessage(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessage (connection As HealthServiceConnection, personIds As IList(Of Guid), addressMustBeValidated As Boolean, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessage : Microsoft.Health.HealthServiceConnection * System.Collections.Generic.IList&lt;Guid&gt; * bool * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessage (connection, personIds, addressMustBeValidated, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="personIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="addressMustBeValidated" Type="System.Boolean" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="personIds">
            The unique identifiers of the people to which the message should be
            sent.
            </param>
        <param name="addressMustBeValidated">
          <b>true</b> if HealthVault ensures that the person has validated 
            their message address before sending the mail; <b>false</b> if the 
            message will be sent even if the person's address has not been 
            validated.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message to the specified message recipients.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            </remarks>
        <exception cref="T:System.ArgumentException">
            The <paramref name="personIds" /> or <paramref name="subject" />, 
            <paramref name="textBody" />  or <paramref name="htmlBody" /> parameters 
            are <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The server returned a failure when making the request.        
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessageFromApplication">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessageFromApplication (Microsoft.Health.HealthServiceConnection connection, System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt; mailRecipient, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessageFromApplication(class Microsoft.Health.HealthServiceConnection connection, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.MailRecipient&gt; mailRecipient, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{Microsoft.Health.MailRecipient},System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessageFromApplication (connection As HealthServiceConnection, mailRecipient As IList(Of MailRecipient), senderMailboxName As String, senderDisplayName As String, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessageFromApplication : Microsoft.Health.HealthServiceConnection * System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt; * string * string * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessageFromApplication (connection, mailRecipient, senderMailboxName, senderDisplayName, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="mailRecipient" Type="System.Collections.Generic.IList&lt;Microsoft.Health.MailRecipient&gt;" />
        <Parameter Name="senderMailboxName" Type="System.String" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="mailRecipient">
            The addresses and display names of the people to send the 
            message to.
            </param>
        <param name="senderMailboxName">
            An application specified mailbox name that's sending the message.
            The mailbox name is appended to the application's domain name to 
            form the From email address of the message. This parameter should
            only contain the characters before the @ symbol of the email 
            address.
            </param>
        <param name="senderDisplayName">
            The message sender's display name.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message originating from the application to 
            the specified message recipients. 
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            
            If the domain name of the application has not been previously 
            set (usually through app registration), this method will throw 
            a <see cref="T:Microsoft.Health.HealthServiceException" />.        
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="mailRecipient" /> is null or empty,
            -or-
            if <paramref name="senderMailboxName" /> is null or empty,
            -or-
            if <paramref name="senderDisplayName" /> is null or empty,
            -or-
            if <paramref name="subject" /> is null or empty,
            -or-
            if <paramref name="textBody" /> and <paramref name="htmlBody" />
            are both null or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If the server returned a failure when making the request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessageFromApplication">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessageFromApplication (Microsoft.Health.HealthServiceConnection connection, System.Collections.Generic.IList&lt;Guid&gt; recipientPersonIds, bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessageFromApplication(class Microsoft.Health.HealthServiceConnection connection, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; recipientPersonIds, bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessageFromApplication(Microsoft.Health.HealthServiceConnection,System.Collections.Generic.IList{System.Guid},System.Boolean,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessageFromApplication (connection As HealthServiceConnection, recipientPersonIds As IList(Of Guid), addressMustBeValidated As Boolean, senderMailboxName As String, senderDisplayName As String, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessageFromApplication : Microsoft.Health.HealthServiceConnection * System.Collections.Generic.IList&lt;Guid&gt; * bool * string * string * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessageFromApplication (connection, recipientPersonIds, addressMustBeValidated, senderMailboxName, senderDisplayName, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="recipientPersonIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
        <Parameter Name="addressMustBeValidated" Type="System.Boolean" />
        <Parameter Name="senderMailboxName" Type="System.String" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="recipientPersonIds">
            The unique identifiers of the people to which the message should be
            sent.
            </param>
        <param name="addressMustBeValidated">
            If true, HealthVault will ensure that the person has validated 
            their message address before sending the mail. If false, the 
            message will be sent even if the person's address has not been 
            validated.
            </param>
        <param name="senderMailboxName">
            An application specified mailbox name that's sending the message.
            The mailbox name is appended to the application's domain name to 
            form the From email address of the message. This parameter should
            only contain the characters before the @ symbol of the email 
            address.
            </param>
        <param name="senderDisplayName">
            The message sender's display name.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message originating from the application
            to the specified message recipients.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            
            If the domain name of the application has not been previously 
            set (usually through app registration), this method will throw
            a <see cref="T:Microsoft.Health.HealthServiceException" />.        
            </remarks>
        <exception cref="T:System.ArgumentException">
            If <paramref name="recipientPersonIds" /> is null or empty,
            -or-
            if <paramref name="senderMailboxName" /> is null or empty,
            -or-
            if <paramref name="senderDisplayName" /> is null or empty,
            -or-
            if <paramref name="subject" /> is null or empty,
            -or-
            if <paramref name="textBody" /> and <paramref name="htmlBody" />
            are both null or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If the server returned a failure when making the request.        
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessageToCustodians">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessageToCustodians (Microsoft.Health.HealthServiceConnection connection, Guid recordId, bool addressMustBeValidated, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessageToCustodians(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Guid recordId, bool addressMustBeValidated, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessageToCustodians(Microsoft.Health.HealthServiceConnection,System.Guid,System.Boolean,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessageToCustodians (connection As HealthServiceConnection, recordId As Guid, addressMustBeValidated As Boolean, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessageToCustodians : Microsoft.Health.HealthServiceConnection * Guid * bool * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessageToCustodians (connection, recordId, addressMustBeValidated, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="recordId" Type="System.Guid" />
        <Parameter Name="addressMustBeValidated" Type="System.Boolean" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="recordId">
            The unique identifier of the health record for which the 
            custodians should be sent the message.
            </param>
        <param name="addressMustBeValidated">
          <b>true</b> if HealthVault ensures that the person has validated 
            their message address before sending the mail; <b>false</b> if the 
            message will be sent even if the person's address has not been 
            validated.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message to custodians of the specified health 
            record.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified, then a
            multi-part message is sent so that the HTML body will be used
            and falls back to text if not supported by the client.
            </remarks>
        <exception cref="T:System.ArgumentException"> 
            The <paramref name="recordId" /> parameter is <see cref="F:System.Guid.Empty" />
            -or-
            The <paramref name="subject" /> parameter is <b>null</b> or empty,
            -or-
            The <paramref name="textBody" /> and <paramref name="htmlBody" /> parameters 
            are both <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The server returned a failure when making the request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SendInsecureMessageToCustodiansFromApplication">
      <MemberSignature Language="C#" Value="public static void SendInsecureMessageToCustodiansFromApplication (Microsoft.Health.HealthServiceConnection connection, Guid recordId, bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SendInsecureMessageToCustodiansFromApplication(class Microsoft.Health.HealthServiceConnection connection, valuetype System.Guid recordId, bool addressMustBeValidated, string senderMailboxName, string senderDisplayName, string subject, string textBody, string htmlBody) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SendInsecureMessageToCustodiansFromApplication(Microsoft.Health.HealthServiceConnection,System.Guid,System.Boolean,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SendInsecureMessageToCustodiansFromApplication (connection As HealthServiceConnection, recordId As Guid, addressMustBeValidated As Boolean, senderMailboxName As String, senderDisplayName As String, subject As String, textBody As String, htmlBody As String)" />
      <MemberSignature Language="F#" Value="static member SendInsecureMessageToCustodiansFromApplication : Microsoft.Health.HealthServiceConnection * Guid * bool * string * string * string * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SendInsecureMessageToCustodiansFromApplication (connection, recordId, addressMustBeValidated, senderMailboxName, senderDisplayName, subject, textBody, htmlBody)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="recordId" Type="System.Guid" />
        <Parameter Name="addressMustBeValidated" Type="System.Boolean" />
        <Parameter Name="senderMailboxName" Type="System.String" />
        <Parameter Name="senderDisplayName" Type="System.String" />
        <Parameter Name="subject" Type="System.String" />
        <Parameter Name="textBody" Type="System.String" />
        <Parameter Name="htmlBody" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use for this operation. The connection must
            have application capabilities.
            </param>
        <param name="recordId">
            The unique identifier of the health record for which the 
            custodians should be sent the message.
            </param>
        <param name="addressMustBeValidated">
            If true, HealthVault will only send the message to custodians with 
            validated e-mail addresses. If false, the message will
            be sent even if the custodians' addresses have not been validated.
            </param>
        <param name="senderMailboxName">
            An application specified mailbox name that's sending the message.
            The mailbox name is appended to the application's domain name to 
            form the From email address of the message. This parameter should
            only contain the characters before the @ symbol of the email 
            address.
            </param>
        <param name="senderDisplayName">
            The message sender's display name.
            </param>
        <param name="subject">
            The subject of the message.
            </param>
        <param name="textBody">
            The text body of the message.
            </param>
        <param name="htmlBody">
            The HTML body of the message.
            </param>
        <summary>
            Sends an insecure message originating from the application 
            to custodians of the specified health record.
            </summary>
        <remarks>
            If both the <paramref name="textBody" /> and 
            <paramref name="htmlBody" /> of the message is specified then a
            multi-part message will be sent so that the html body will be used
            and fallback to text if not supported by the client.
            
            If the domain name of the application has not been previously 
            set (usually through app registration), this method will throw 
            a <see cref="T:Microsoft.Health.HealthServiceException" />.
                    
            The calling application and the person through which authorization to the 
            specified record was obtained must be authorized for the record. 
            The person must be either authenticated, or if the person is offline,
            their person Id specified as the offline person Id.
            See <see cref="T:Microsoft.Health.Web.OfflineWebApplicationConnection" /> 
            for more information.
            </remarks>
        <exception cref="T:System.ArgumentException"> 
            If <paramref name="recordId" /> is <see cref="F:System.Guid.Empty" />
            -or-
            if <paramref name="senderMailboxName" /> is null or empty,
            -or-
            if <paramref name="senderDisplayName" /> is null or empty,
            -or-
            if <paramref name="subject" /> is null or empty,
            -or-
            if <paramref name="textBody" /> and <paramref name="htmlBody" />
            are both null or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If the server returned a failure when making the request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationSettings">
      <MemberSignature Language="C#" Value="public static void SetApplicationSettings (Microsoft.Health.HealthServiceConnection connection, System.Xml.XPath.IXPathNavigable applicationSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetApplicationSettings(class Microsoft.Health.HealthServiceConnection connection, class System.Xml.XPath.IXPathNavigable applicationSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.SetApplicationSettings(Microsoft.Health.HealthServiceConnection,System.Xml.XPath.IXPathNavigable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetApplicationSettings (connection As HealthServiceConnection, applicationSettings As IXPathNavigable)" />
      <MemberSignature Language="F#" Value="static member SetApplicationSettings : Microsoft.Health.HealthServiceConnection * System.Xml.XPath.IXPathNavigable -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.SetApplicationSettings (connection, applicationSettings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.HealthServiceConnection" />
        <Parameter Name="applicationSettings" Type="System.Xml.XPath.IXPathNavigable" />
      </Parameters>
      <Docs>
        <param name="connection">The connection to use to perform the operation. This connection
             must be authenticated. </param>
        <param name="applicationSettings">
             The application settings XML.
             </param>
        <summary>
             Sets the application settings for the current application and
             person.
             </summary>
        <remarks>
             This may be <b>null</b> if no application settings have been 
             stored for the application or user.
             </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateChildApplication">
      <MemberSignature Language="C#" Value="public static void UpdateChildApplication (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.ApplicationInfo applicationInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateChildApplication(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.ApplicationInfo applicationInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.UpdateChildApplication(Microsoft.Health.ApplicationConnection,Microsoft.Health.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="static member UpdateChildApplication : Microsoft.Health.ApplicationConnection * Microsoft.Health.ApplicationInfo -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.UpdateChildApplication (connection, applicationInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="applicationInfo" Type="Microsoft.Health.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to make the update.
            </param>
        <param name="applicationInfo">
            The updated <see cref="T:Microsoft.Health.ApplicationInfo" /> instance.
            </param>
        <summary>
            Updates the application's configuration in HealthVault.
            </summary>
        <remarks>
            This method makes a remote call to the HealthVault service.
            The calling application in the <paramref name="connection" /> must be the same as
            the application specified by this ApplicationInfo instance or its master application.
            Note, this update will replace all configuration elements for the application. It is 
            advised that <see cref="M:Microsoft.Health.ApplicationProvisioning.Provisioner.GetApplication(Microsoft.Health.Web.OfflineWebApplicationConnection,System.Guid)" /> is 
            called to retrieve the existing application configuration before changing values and 
            calling Update.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            The HealthVault service returned an error.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateConnectPackageApplicationPatientId">
      <MemberSignature Language="C#" Value="public static void UpdateConnectPackageApplicationPatientId (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string oldApplicationPatientId, string newApplicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateConnectPackageApplicationPatientId(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string oldApplicationPatientId, string newApplicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.UpdateConnectPackageApplicationPatientId(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateConnectPackageApplicationPatientId (connection As OfflineWebApplicationConnection, oldApplicationPatientId As String, newApplicationPatientId As String)" />
      <MemberSignature Language="F#" Value="static member UpdateConnectPackageApplicationPatientId : Microsoft.Health.Web.OfflineWebApplicationConnection * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.UpdateConnectPackageApplicationPatientId (connection, oldApplicationPatientId, newApplicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="oldApplicationPatientId" Type="System.String" />
        <Parameter Name="newApplicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The HealthVault connection to use for the operation.
            </param>
        <param name="oldApplicationPatientId">
            The application patient identifier that was used to create the initial package.
            </param>
        <param name="newApplicationPatientId">
            The new application patient identifier.
            </param>
        <summary>
            Updates existing pending packages with a new application patient identifier.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="oldApplicationPatientId" /> or <paramref name="newApplicationPatientId" />
            is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateConnectPackageApplicationPatientIdForIdentityCode">
      <MemberSignature Language="C#" Value="public static void UpdateConnectPackageApplicationPatientIdForIdentityCode (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string identityCode, string newApplicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateConnectPackageApplicationPatientIdForIdentityCode(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string identityCode, string newApplicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.UpdateConnectPackageApplicationPatientIdForIdentityCode(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateConnectPackageApplicationPatientIdForIdentityCode (connection As OfflineWebApplicationConnection, identityCode As String, newApplicationPatientId As String)" />
      <MemberSignature Language="F#" Value="static member UpdateConnectPackageApplicationPatientIdForIdentityCode : Microsoft.Health.Web.OfflineWebApplicationConnection * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.UpdateConnectPackageApplicationPatientIdForIdentityCode (connection, identityCode, newApplicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="identityCode" Type="System.String" />
        <Parameter Name="newApplicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The HealthVault connection to use for the operation.
            </param>
        <param name="identityCode">
            The unique token that identifies the package.
            </param>
        <param name="newApplicationPatientId">
            The new application patient identifier.
            </param>
        <summary>
            Updates an existing pending package with a new application patient identifier.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="newApplicationPatientId" />
            is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateItems">
      <MemberSignature Language="C#" Value="public static void UpdateItems (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; itemsToUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateItems(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;class Microsoft.Health.HealthRecordItem&gt; itemsToUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.UpdateItems(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{Microsoft.Health.HealthRecordItem})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateItems (connection As ApplicationConnection, accessor As HealthRecordAccessor, itemsToUpdate As IList(Of HealthRecordItem))" />
      <MemberSignature Language="F#" Value="static member UpdateItems : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt; -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.UpdateItems (connection, accessor, itemsToUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="itemsToUpdate" Type="System.Collections.Generic.IList&lt;Microsoft.Health.HealthRecordItem&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
             The connection to use to access the data.
             </param>
        <param name="accessor">
             The record to use.
             </param>
        <param name="itemsToUpdate">
             The health record items to be updated.
             </param>
        <summary>
             Updates the specified health record items in one batch call to 
             the service.
             </summary>
        <remarks>
             Only new items are updated with the appropriate unique identifier. 
             All other sections must be updated manually.
             <br /><br />
             This method accesses the HealthVault service across the network.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             The <paramref name="itemsToUpdate" /> parameter is <b>null</b>.
             </exception>
        <exception cref="T:System.ArgumentException">
             The <paramref name="itemsToUpdate" /> contains a <b>null</b> member or
             a <see cref="T:Microsoft.Health.HealthRecordItem" /> instance that does not have an ID.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             The HealthVault service returned an error.
             The exception's Error property will contain the index of the
             item on which the failure occurred in the ErrorInfo property. If any failures occur, 
             no items will have been updated.
             </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdatePatientConnectionApplicationPatientId">
      <MemberSignature Language="C#" Value="public static void UpdatePatientConnectionApplicationPatientId (Microsoft.Health.Web.OfflineWebApplicationConnection connection, string oldApplicationPatientId, string newApplicationPatientId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdatePatientConnectionApplicationPatientId(class Microsoft.Health.Web.OfflineWebApplicationConnection connection, string oldApplicationPatientId, string newApplicationPatientId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.HealthVaultPlatform.UpdatePatientConnectionApplicationPatientId(Microsoft.Health.Web.OfflineWebApplicationConnection,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdatePatientConnectionApplicationPatientId (connection As OfflineWebApplicationConnection, oldApplicationPatientId As String, newApplicationPatientId As String)" />
      <MemberSignature Language="F#" Value="static member UpdatePatientConnectionApplicationPatientId : Microsoft.Health.Web.OfflineWebApplicationConnection * string * string -&gt; unit" Usage="Microsoft.Health.HealthVaultPlatform.UpdatePatientConnectionApplicationPatientId (connection, oldApplicationPatientId, newApplicationPatientId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.Web.OfflineWebApplicationConnection" />
        <Parameter Name="oldApplicationPatientId" Type="System.String" />
        <Parameter Name="newApplicationPatientId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connection">
            The HealthVault connection to use for the operation.
            </param>
        <param name="oldApplicationPatientId">
            The application patient identifier that was used to make the initial connection request.
            </param>
        <param name="newApplicationPatientId">
            The new application patient identifier.
            </param>
        <summary>
            Updates an existing pending patient connection with a new application patient identifier.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="connection" /> is <b>null</b>.
            </exception>
        <exception cref="T:System.ArgumentException">
            If <paramref name="oldApplicationPatientId" /> or <paramref name="newApplicationPatientId" />
            is <b>null</b> or empty.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs when contacting HealthVault.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>