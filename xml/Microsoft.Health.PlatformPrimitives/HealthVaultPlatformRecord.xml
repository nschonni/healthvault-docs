<Type Name="HealthVaultPlatformRecord" FullName="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord">
  <TypeSignature Language="C#" Value="public class HealthVaultPlatformRecord" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HealthVaultPlatformRecord extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord" />
  <TypeSignature Language="VB.NET" Value="Public Class HealthVaultPlatformRecord" />
  <TypeSignature Language="F#" Value="type HealthVaultPlatformRecord = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Health</AssemblyName>
    <AssemblyVersion>2.64.0.0</AssemblyVersion>
    <AssemblyVersion>2.68.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Provides low-level access to the HealthVault record operations.
            </summary>
    <remarks>
      <see cref="T:Microsoft.Health.HealthVaultPlatform" /> uses this class to perform operations. Set 
            HealthVaultPlatformRecord.Current to a derived class to intercept all message calls.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HealthVaultPlatformRecord ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMock">
      <MemberSignature Language="C#" Value="public static void DisableMock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisableMock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.DisableMock" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DisableMock ()" />
      <MemberSignature Language="F#" Value="static member DisableMock : unit -&gt; unit" Usage="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.DisableMock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes mocking of calls to this class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
            There is no mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableMock">
      <MemberSignature Language="C#" Value="public static void EnableMock (Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord mock);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableMock(class Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord mock) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.EnableMock(Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableMock (mock As HealthVaultPlatformRecord)" />
      <MemberSignature Language="F#" Value="static member EnableMock : Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord -&gt; unit" Usage="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.EnableMock mock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mock" Type="Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord" />
      </Parameters>
      <Docs>
        <param name="mock">The mocking class.</param>
        <summary>
            Enables mocking of calls to this class.
            </summary>
        <remarks>
            The calling class should pass in a class that derives from this
            class and overrides the calls to be mocked. 
            </remarks>
        <exception cref="T:System.InvalidOperationException">
            There is already a mock registered for this class.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="GetValidGroupMembership">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; applicationIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItem&gt; GetValidGroupMembership(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; applicationIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.GetValidGroupMembership(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValidGroupMembership (connection As ApplicationConnection, accessor As HealthRecordAccessor, applicationIds As IList(Of Guid)) As Collection(Of HealthRecordItem)" />
      <MemberSignature Language="F#" Value="abstract member GetValidGroupMembership : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;&#xA;override this.GetValidGroupMembership : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;" Usage="healthVaultPlatformRecord.GetValidGroupMembership (connection, accessor, applicationIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="applicationIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="applicationIds">
            A collection of unique application identifiers for which to 
            search for group memberships.  For a null or empty application identifier 
            list, return all valid group memberships for the record.  Otherwise, 
            return only those group memberships last updated by one of the 
            supplied application identifiers.
            </param>
        <summary>
            Gets valid group memberships for a record.
            </summary>
        <returns>
            A List of HealthRecordItems representing the valid group memberships.
            </returns>
        <remarks>
            Group membership thing types allow an application to signify that the
            record belongs to an application defined group.  A record in the group may be 
            eligible for special programs offered by other applications, for example.  
            Applications then need a away to query for valid group memberships.
            <br />
            Valid group memberships are those memberships which are not expired, and whose
            last updating application is authorized by the last updating person to 
            read and delete the membership.
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If an error occurs while contacting the HealthVault service.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissions(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.QueryPermissions(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryPermissions (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As Collection(Of HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="abstract member QueryPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;&#xA;override this.QueryPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="healthVaultPlatformRecord.QueryPermissions (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record.
            </summary>
        <returns>
            A list of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
            objects which represent the permissions that the current
            authenticated person has for the HealthRecordItemTypes specified
            in the current health record when using the current application.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned. If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            If there is an exception during executing the request to HealthVault. 
            </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryPermissionsByTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;Guid,Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.Guid, class Microsoft.Health.HealthRecordItemTypePermission&gt; QueryPermissionsByTypes(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.QueryPermissionsByTypes(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryPermissionsByTypes (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As IDictionary(Of Guid, HealthRecordItemTypePermission)" />
      <MemberSignature Language="F#" Value="abstract member QueryPermissionsByTypes : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypePermission&gt;&#xA;override this.QueryPermissionsByTypes : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; System.Collections.Generic.IDictionary&lt;Guid, Microsoft.Health.HealthRecordItemTypePermission&gt;" Usage="healthVaultPlatformRecord.QueryPermissionsByTypes (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.Guid,Microsoft.Health.HealthRecordItemTypePermission&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
             The connection to use to access the data.
             </param>
        <param name="accessor">
             The record to use.
             </param>
        <param name="healthRecordItemTypeIds">
             A collection of unique identifiers to identify the health record  
             item types, for which the permissions are being queried. 
             </param>
        <summary>
             Gets the permissions which the authenticated person 
             has when using the calling application for the specified item types
             in this  record.
             </summary>
        <returns>
             Returns a dictionary of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> 
             with health record item types as the keys. 
             </returns>
        <remarks> 
             If the list of health record item types is empty, an empty dictionary is 
             returned. If for a health record item type, the person has 
             neither online access nor offline access permissions, 
             <b> null </b> will be returned for that type in the dictionary.
             </remarks>
        <exception cref="T:System.ArgumentNullException">
             If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
             </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
             If there is an exception during executing the request to HealthVault. 
             </exception>
      </Docs>
    </Member>
    <Member MemberName="QueryRecordPermissions">
      <MemberSignature Language="C#" Value="public virtual Microsoft.Health.HealthRecordPermissions QueryRecordPermissions (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor, System.Collections.Generic.IList&lt;Guid&gt; healthRecordItemTypeIds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Health.HealthRecordPermissions QueryRecordPermissions(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor, class System.Collections.Generic.IList`1&lt;valuetype System.Guid&gt; healthRecordItemTypeIds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.QueryRecordPermissions(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor,System.Collections.Generic.IList{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryRecordPermissions (connection As ApplicationConnection, accessor As HealthRecordAccessor, healthRecordItemTypeIds As IList(Of Guid)) As HealthRecordPermissions" />
      <MemberSignature Language="F#" Value="abstract member QueryRecordPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; Microsoft.Health.HealthRecordPermissions&#xA;override this.QueryRecordPermissions : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor * System.Collections.Generic.IList&lt;Guid&gt; -&gt; Microsoft.Health.HealthRecordPermissions" Usage="healthVaultPlatformRecord.QueryRecordPermissions (connection, accessor, healthRecordItemTypeIds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Health.HealthRecordPermissions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
        <Parameter Name="healthRecordItemTypeIds" Type="System.Collections.Generic.IList&lt;System.Guid&gt;" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <param name="healthRecordItemTypeIds">
            A collection of uniqueidentifiers to identify the health record  
            item types, for which the permissions are being queried. 
            </param>
        <summary>
            Gets the permissions which the authenticated person 
            has when using the calling application for the specified item types 
            in this health record as well as the other permission settings such as MeaningfulUseOptIn.
            </summary>
        <returns>
            A <see cref="T:Microsoft.Health.HealthRecordPermissions" /> object
            which contains a collection of <see cref="T:Microsoft.Health.HealthRecordItemTypePermission" /> objects and
            other permission settings.
            </returns>
        <remarks> 
            If the list of health record item types is empty, an empty list is 
            returned for <see cref="T:Microsoft.Health.HealthRecordPermissions" /> object's ItemTypePermissions property.
            If for a health record item type, the person has 
            neither online access nor offline access permissions, 
            HealthRecordItemTypePermission object is not returned for that
            health record item type. 
            </remarks>
        <exception cref="T:System.ArgumentNullException">
            If <paramref name="healthRecordItemTypeIds" /> is <b>null</b>.
            </exception>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            There is an error in the server request.
            </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveApplicationAuthorization">
      <MemberSignature Language="C#" Value="public virtual void RemoveApplicationAuthorization (Microsoft.Health.ApplicationConnection connection, Microsoft.Health.HealthRecordAccessor accessor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveApplicationAuthorization(class Microsoft.Health.ApplicationConnection connection, class Microsoft.Health.HealthRecordAccessor accessor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Health.PlatformPrimitives.HealthVaultPlatformRecord.RemoveApplicationAuthorization(Microsoft.Health.ApplicationConnection,Microsoft.Health.HealthRecordAccessor)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveApplicationAuthorization (connection As ApplicationConnection, accessor As HealthRecordAccessor)" />
      <MemberSignature Language="F#" Value="abstract member RemoveApplicationAuthorization : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor -&gt; unit&#xA;override this.RemoveApplicationAuthorization : Microsoft.Health.ApplicationConnection * Microsoft.Health.HealthRecordAccessor -&gt; unit" Usage="healthVaultPlatformRecord.RemoveApplicationAuthorization (connection, accessor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Health</AssemblyName>
        <AssemblyVersion>2.64.0.0</AssemblyVersion>
        <AssemblyVersion>2.68.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Microsoft.Health.ApplicationConnection" />
        <Parameter Name="accessor" Type="Microsoft.Health.HealthRecordAccessor" />
      </Parameters>
      <Docs>
        <param name="connection">
            The connection to use to access the data.
            </param>
        <param name="accessor">
            The record to use.
            </param>
        <summary>
            Releases the authorization of the application on the health record.
            </summary>
        <remarks>
            Once the application releases the authorization to the health record, 
            calling any methods of this <see cref="T:Microsoft.Health.HealthRecordAccessor" /> will result 
            in a <see cref="T:Microsoft.Health.HealthServiceAccessDeniedException" />."
            </remarks>
        <exception cref="T:Microsoft.Health.HealthServiceException">
            Errors during the authorization release.
            </exception>
      </Docs>
    </Member>
  </Members>
</Type>